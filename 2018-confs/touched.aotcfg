compileOnly java.util.Collections$SynchronizedCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
compileOnly java.util.ImmutableCollections$Set2.hashCode()I
compileOnly java.util.ArrayList.<init>(Ljava/util/Collection;)V
compileOnly java.util.Collections$EmptySet.<init>(Ljava/util/Collections$1;)V
compileOnly java.nio.Buffer.position()I
compileOnly java.util.HashMap.values()Ljava/util/Collection;
compileOnly java.io.UnixFileSystem.resolve(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
compileOnly java.lang.ref.WeakReference.<init>(Ljava/lang/Object;)V
compileOnly jdk.internal.module.ModulePatcher.<init>(Ljava/util/Map;)V
compileOnly java.lang.module.ModuleDescriptor$Provides.providers()Ljava/util/List;
compileOnly java.nio.CharBuffer.limit(I)Ljava/nio/CharBuffer;
compileOnly jdk.internal.ref.PhantomCleanable.insert()V
compileOnly sun.nio.fs.UnixPath.initOffsets()V
compileOnly java.util.ImmutableCollections$MapN.get(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.lang.Class.forName(Ljava/lang/String;)Ljava/lang/Class;
compileOnly java.util.ArrayList$Itr.hasNext()Z
compileOnly java.lang.System.currentTimeMillis()J
compileOnly java.lang.ModuleLayer.configuration()Ljava/lang/module/Configuration;
compileOnly java.nio.Buffer.position(I)Ljava/nio/Buffer;
compileOnly sun.net.www.protocol.file.FileURLConnection.<init>(Ljava/net/URL;Ljava/io/File;)V
compileOnly java.lang.Object.wait()V
compileOnly java.lang.Math.<clinit>()V
compileOnly jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance([Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.util.WeakHashMap.<init>(IF)V
compileOnly java.util.Arrays.copyOfRange([BII)[B
compileOnly jdk.internal.module.ModuleLoaderMap.platformModules()Ljava/util/Set;
compileOnly jdk.internal.misc.SharedSecrets.getJavaLangAccess()Ljdk/internal/misc/JavaLangAccess;
compileOnly java.util.Collections$EmptySet.<init>()V
compileOnly java.io.FileInputStream$1.<init>(Ljava/io/FileInputStream;)V
compileOnly jdk.internal.loader.BuiltinClassLoader.<init>(Ljava/lang/String;Ljdk/internal/loader/BuiltinClassLoader;Ljdk/internal/loader/URLClassPath;)V
compileOnly java.io.FilterOutputStream.<init>(Ljava/io/OutputStream;)V
compileOnly java.security.AccessControlContext.combine([Ljava/security/ProtectionDomain;[Ljava/security/ProtectionDomain;)[Ljava/security/ProtectionDomain;
compileOnly java.util.ArrayList.grow()[Ljava/lang/Object;
compileOnly java.util.HashSet.contains(Ljava/lang/Object;)Z
compileOnly jdk.internal.reflect.DelegatingConstructorAccessorImpl.setDelegate(Ljdk/internal/reflect/ConstructorAccessorImpl;)V
compileOnly java.net.URI$1.<init>()V
compileOnly jdk.internal.misc.Unsafe.getObjectVolatile(Ljava/lang/Object;J)Ljava/lang/Object;
compileOnly java.lang.Class.getReflectionFactory()Ljdk/internal/reflect/ReflectionFactory;
compileOnly java.util.Objects.hashCode(Ljava/lang/Object;)I
compileOnly jdk.internal.misc.Unsafe.putObjectRelease(Ljava/lang/Object;JLjava/lang/Object;)V
compileOnly java.util.concurrent.ConcurrentHashMap$ValuesView.iterator()Ljava/util/Iterator;
compileOnly jdk.internal.loader.ClassLoaders.access$000()Ljdk/internal/misc/JavaLangAccess;
compileOnly java.lang.System.getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
compileOnly java.nio.Buffer.flip()Ljava/nio/Buffer;
compileOnly jdk.internal.loader.BootLoader.getServicesCatalog()Ljdk/internal/module/ServicesCatalog;
compileOnly java.io.PrintStream.println(Ljava/lang/String;)V
compileOnly java.lang.ThreadLocal$ThreadLocalMap.getEntry(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
compileOnly jdk.internal.loader.AbstractClassLoaderValue.extractValue(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.lang.Thread.setDaemon(Z)V
compileOnly java.nio.charset.CoderResult.<init>(II)V
compileOnly java.util.Map.ofEntries([Ljava/util/Map$Entry;)Ljava/util/Map;
compileOnly java.util.Collections.unmodifiableMap(Ljava/util/Map;)Ljava/util/Map;
compileOnly sun.nio.cs.StandardCharsets.<clinit>()V
compileOnly java.lang.reflect.Constructor.copy()Ljava/lang/reflect/Constructor;
compileOnly java.lang.CharacterDataLatin1.<init>()V
compileOnly java.util.ArrayDeque.size()I
compileOnly sun.security.util.FilePermCompat.<clinit>()V
compileOnly java.net.URI.access$202(Ljava/net/URI;Ljava/lang/String;)Ljava/lang/String;
compileOnly java.lang.module.ModuleDescriptor$Requires.<clinit>()V
compileOnly java.util.ArrayDeque.sub(III)I
compileOnly java.util.ImmutableCollections$List0.<init>()V
compileOnly jdk.internal.reflect.Reflection.ensureMemberAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V
compileOnly java.lang.System.initPhase3()V
compileOnly java.lang.ClassLoader.registerNatives()V
compileOnly java.nio.ByteBuffer.flip()Ljava/nio/ByteBuffer;
compileOnly jdk.internal.loader.AbstractClassLoaderValue.get(Ljava/lang/ClassLoader;)Ljava/lang/Object;
compileOnly java.util.Collections$UnmodifiableCollection$1.<init>(Ljava/util/Collections$UnmodifiableCollection;)V
compileOnly sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar.<init>(Ljava/lang/String;)V
compileOnly java.security.BasicPermission.<init>(Ljava/lang/String;)V
compileOnly jdk.internal.loader.URLClassPath$FileLoader$1.<init>(Ljdk/internal/loader/URLClassPath$FileLoader;Ljava/lang/String;Ljava/net/URL;Ljava/io/File;)V
compileOnly java.lang.StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
compileOnly java.util.concurrent.ConcurrentHashMap$Node.<init>(ILjava/lang/Object;Ljava/lang/Object;)V
compileOnly java.nio.charset.CharsetEncoder.implOnUnmappableCharacter(Ljava/nio/charset/CodingErrorAction;)V
compileOnly java.security.Permissions$1.apply(Ljava/lang/Class;)Ljava/security/PermissionCollection;
compileOnly java.net.URI.decode(Ljava/lang/String;Z)Ljava/lang/String;
compileOnly java.io.FilePermissionCollection$1.<init>(Ljava/io/FilePermissionCollection;)V
compileOnly sun.net.www.ParseUtil.fileToEncodedURL(Ljava/io/File;)Ljava/net/URL;
compileOnly sun.nio.cs.Unicode.<init>(Ljava/lang/String;[Ljava/lang/String;)V
compileOnly java.io.UnixFileSystem.getLength(Ljava/io/File;)J
compileOnly java.util.Locale.createConstant(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Locale;
compileOnly java.lang.ModuleLayer.parents()Ljava/util/List;
compileOnly java.lang.ClassLoader.initializePath(Ljava/lang/String;)[Ljava/lang/String;
compileOnly java.lang.Integer.parseInt(Ljava/lang/String;I)I
compileOnly java.util.concurrent.ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly jdk.internal.ref.CleanerFactory$1.<init>()V
compileOnly jdk.internal.module.ModuleLoaderMap$Mapper.<init>(Ljava/util/Map;)V
compileOnly jdk.internal.ref.WeakCleanable.<init>()V
compileOnly jdk.internal.module.ModuleBootstrap.limitModules()Ljava/util/Set;
compileOnly java.util.Collections$EmptyMap.get(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.lang.ThreadLocal.<init>()V
compileOnly java.util.concurrent.atomic.AtomicInteger.<init>()V
compileOnly java.util.concurrent.ConcurrentHashMap$MapEntry.getKey()Ljava/lang/Object;
compileOnly java.lang.String.checkBoundsBeginEnd(III)V
compileOnly java.util.ArrayList.<init>()V
compileOnly java.lang.Class.desiredAssertionStatus0(Ljava/lang/Class;)Z
compileOnly jdk.internal.module.Builder.newOpens(Ljava/util/Set;Ljava/lang/String;)Ljava/lang/module/ModuleDescriptor$Opens;
compileOnly sun.nio.cs.StreamEncoder.writeBytes()V
compileOnly java.util.StringJoiner.compactElts()V
compileOnly java.io.DefaultFileSystem.getFileSystem()Ljava/io/FileSystem;
compileOnly jdk.internal.misc.Unsafe.<clinit>()V
compileOnly java.util.Collections$UnmodifiableCollection$1.next()Ljava/lang/Object;
compileOnly jdk.internal.loader.BuiltinClassLoader.hasClassPath()Z
compileOnly java.lang.ClassLoader.loadLibrary(Ljava/lang/Class;Ljava/lang/String;Z)V
compileOnly java.io.File.exists()Z
compileOnly java.nio.Buffer.remaining()I
compileOnly java.lang.ref.ReferenceQueue$Lock.<init>(Ljava/lang/ref/ReferenceQueue$1;)V
compileOnly java.lang.reflect.Array.newArray(Ljava/lang/Class;I)Ljava/lang/Object;
compileOnly java.lang.PublicMethods$Key.<clinit>()V
compileOnly java.io.File.getCanonicalPath()Ljava/lang/String;
compileOnly java.util.AbstractMap.keySet()Ljava/util/Set;
compileOnly java.nio.CharBuffer.position(I)Ljava/nio/CharBuffer;
compileOnly java.security.Permissions.<init>()V
compileOnly jdk.internal.reflect.Reflection.verifyMemberAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)Z
compileOnly java.util.HashMap.<init>()V
compileOnly jdk.internal.module.SystemModuleFinders.systemModules(Ljava/lang/String;)Ljdk/internal/module/SystemModules;
compileOnly java.lang.StringBuilder.<init>(I)V
compileOnly jdk.internal.loader.ClassLoaders$AppClassLoader.getPermissions(Ljava/security/CodeSource;)Ljava/security/PermissionCollection;
compileOnly java.lang.Character.digit(CI)I
compileOnly jdk.internal.loader.ClassLoaders.<clinit>()V
compileOnly jdk.internal.module.Builder.version(Ljava/lang/String;)Ljdk/internal/module/Builder;
compileOnly sun.util.locale.InternalLocaleBuilder.setExtensions(Ljava/lang/String;)Lsun/util/locale/InternalLocaleBuilder;
compileOnly jdk.internal.module.ModuleBootstrap.addIllegalAccess(Ljava/lang/module/ModuleFinder;Ljdk/internal/module/SystemModules;Ljava/lang/ModuleLayer;Z)V
compileOnly java.util.concurrent.atomic.AtomicLong.<clinit>()V
compileOnly java.net.URL$3.<init>()V
compileOnly java.util.ImmutableCollections$Set1.iterator()Ljava/util/Iterator;
compileOnly java.lang.ref.Cleaner.<init>()V
compileOnly sun.net.www.protocol.file.Handler.openConnection(Ljava/net/URL;Ljava/net/Proxy;)Ljava/net/URLConnection;
compileOnly jdk.internal.reflect.Reflection.verifyModuleAccess(Ljava/lang/Module;Ljava/lang/Class;)Z
compileOnly sun.util.locale.BaseLocale$Key.equals(Ljava/lang/Object;)Z
compileOnly java.util.HashMap$Values.iterator()Ljava/util/Iterator;
compileOnly java.lang.module.ModuleDescriptor$Opens.targets()Ljava/util/Set;
compileOnly jdk.internal.loader.ClassLoaders$PlatformClassLoader.<init>(Ljdk/internal/loader/ClassLoaders$BootClassLoader;)V
compileOnly java.lang.ClassLoader.addClass(Ljava/lang/Class;)V
compileOnly java.nio.charset.Charset.name()Ljava/lang/String;
compileOnly java.io.ExpiringCache$1.removeEldestEntry(Ljava/util/Map$Entry;)Z
compileOnly java.lang.ClassLoader$NativeLibrary.<init>(Ljava/lang/Class;Ljava/lang/String;Z)V
compileOnly java.util.Vector.elementData(I)Ljava/lang/Object;
compileOnly java.io.InputStream.<init>()V
compileOnly java.lang.Class.getSuperclass()Ljava/lang/Class;
compileOnly java.net.URL$DefaultFactory.createURLStreamHandler(Ljava/lang/String;)Ljava/net/URLStreamHandler;
compileOnly java.nio.file.spi.FileSystemProvider.<clinit>()V
compileOnly java.lang.Shutdown.shutdown()V
compileOnly java.net.URLConnection.<init>(Ljava/net/URL;)V
compileOnly java.io.BufferedInputStream.<clinit>()V
compileOnly sun.nio.fs.UnixPath.getNameCount()I
compileOnly java.util.Optional.empty()Ljava/util/Optional;
compileOnly jdk.internal.module.Builder.newExports(Ljava/util/Set;Ljava/lang/String;)Ljava/lang/module/ModuleDescriptor$Exports;
compileOnly java.util.Collections.singletonIterator(Ljava/lang/Object;)Ljava/util/Iterator;
compileOnly java.util.HashMap$HashIterator.nextNode()Ljava/util/HashMap$Node;
compileOnly sun.net.www.protocol.file.Handler.openConnection(Ljava/net/URL;)Ljava/net/URLConnection;
compileOnly java.net.URI.toURL()Ljava/net/URL;
compileOnly java.util.concurrent.ConcurrentHashMap.setTabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V
compileOnly java.security.BasicPermission.init(Ljava/lang/String;)V
compileOnly java.lang.module.ModuleDescriptor$1.newProvides(Ljava/lang/String;Ljava/util/List;)Ljava/lang/module/ModuleDescriptor$Provides;
compileOnly java.io.UnixFileSystem.initIDs()V
compileOnly java.util.ImmutableCollections$Set0.instance()Ljava/util/ImmutableCollections$Set0;
compileOnly java.nio.charset.CharsetEncoder.onUnmappableCharacter(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
compileOnly java.lang.System.loadLibrary(Ljava/lang/String;)V
compileOnly jdk.internal.module.ModuleHashes.<init>(Ljava/lang/String;Ljava/util/Map;)V
compileOnly java.lang.module.ModuleDescriptor$Modifier.<init>(Ljava/lang/String;I)V
compileOnly java.lang.module.Configuration.modules()Ljava/util/Set;
compileOnly java.lang.module.ResolvedModule.name()Ljava/lang/String;
compileOnly sun.nio.fs.Util.<clinit>()V
compileOnly jdk.internal.reflect.ReflectionFactory.copyConstructor(Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;
compileOnly java.net.URI$Parser.scan(IILjava/lang/String;)I
compileOnly java.nio.charset.CharsetEncoder.reset()Ljava/nio/charset/CharsetEncoder;
compileOnly java.io.File.<init>(Ljava/lang/String;Ljava/lang/String;)V
compileOnly java.io.UnixFileSystem.<clinit>()V
compileOnly java.lang.ThreadGroup.<init>(Ljava/lang/Void;Ljava/lang/ThreadGroup;Ljava/lang/String;)V
compileOnly java.lang.Module.defineModules(Ljava/lang/module/Configuration;Ljava/util/function/Function;Ljava/lang/ModuleLayer;)Ljava/util/Map;
compileOnly java.lang.CharacterDataLatin1.toUpperCase(I)I
compileOnly jdk.internal.loader.BootLoader.loadModule(Ljava/lang/module/ModuleReference;)V
compileOnly java.lang.ref.Reference$ReferenceHandler.run()V
compileOnly java.util.AbstractMap$1$1.hasNext()Z
compileOnly java.lang.ClassLoader$2.run()Ljava/lang/String;
compileOnly java.lang.System.initPhase2(ZZ)I
compileOnly java.util.Arrays.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z
compileOnly java.util.HashMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.lang.Integer.hashCode()I
compileOnly java.lang.module.ModuleDescriptor$Requires$Modifier.<init>(Ljava/lang/String;I)V
compileOnly java.util.ImmutableCollections$List2.size()I
compileOnly java.lang.Object.<init>()V
compileOnly jdk.internal.misc.Unsafe.arrayIndexScale(Ljava/lang/Class;)I
compileOnly java.lang.reflect.Constructor.<init>(Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Class;IILjava/lang/String;[B[B)V
compileOnly java.io.ExpiringCache.entryFor(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;
compileOnly java.util.Arrays.copyOf([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;
compileOnly jdk.internal.reflect.ReflectionFactory.getExecutableSharedParameterTypes(Ljava/lang/reflect/Executable;)[Ljava/lang/Class;
compileOnly java.net.URLStreamHandler.toExternalForm(Ljava/net/URL;)Ljava/lang/String;
compileOnly java.util.HashMap.keySet()Ljava/util/Set;
compileOnly sun.launcher.LauncherHelper.checkAndLoadMain(ZILjava/lang/String;)Ljava/lang/Class;
compileOnly java.lang.ThreadLocal$ThreadLocalMap.access$100(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;Ljava/lang/Object;)V
compileOnly java.lang.module.ModuleDescriptor$Requires.<init>(Ljava/util/Set;Ljava/lang/String;Ljava/lang/module/ModuleDescriptor$Version;ZLjava/lang/module/ModuleDescriptor$1;)V
compileOnly java.util.HashSet.<clinit>()V
compileOnly java.security.SecureClassLoader$DebugHolder.<clinit>()V
compileOnly java.lang.ThreadLocal.getMap(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap;
compileOnly java.lang.ref.Cleaner$1.<init>()V
compileOnly java.util.Collections.<clinit>()V
compileOnly java.util.StringJoiner.<init>(Ljava/lang/CharSequence;)V
compileOnly sun.security.action.GetPropertyAction.privilegedGetProperty(Ljava/lang/String;)Ljava/lang/String;
compileOnly java.lang.ThreadGroup.checkAccess()V
compileOnly jdk.internal.misc.Signal.hashCode()I
compileOnly java.util.ImmutableCollections$MapN.<init>([Ljava/lang/Object;)V
compileOnly java.util.concurrent.ConcurrentHashMap$BaseIterator.hasNext()Z
compileOnly java.util.ImmutableCollections$SetN.<init>([Ljava/lang/Object;)V
compileOnly java.lang.StringCoding$Result.with([BB)Ljava/lang/StringCoding$Result;
compileOnly java.security.ProtectionDomain.<init>(Ljava/security/CodeSource;Ljava/security/PermissionCollection;)V
compileOnly java.lang.Shutdown$Lock.<init>(Ljava/lang/Shutdown$1;)V
compileOnly jdk.internal.module.ModuleReferenceImpl.moduleTarget()Ljdk/internal/module/ModuleTarget;
compileOnly java.lang.Class.forName0(Ljava/lang/String;ZLjava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Class;
compileOnly java.util.Optional.<init>(Ljava/lang/Object;)V
compileOnly jdk.internal.reflect.ReflectionFactory.copyMethod(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
compileOnly java.lang.Float.floatToRawIntBits(F)I
compileOnly java.lang.String.concat(Ljava/lang/String;)Ljava/lang/String;
compileOnly jdk.internal.module.ModuleHashes.hashes()Ljava/util/Map;
compileOnly java.util.concurrent.ConcurrentHashMap.computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
compileOnly java.lang.String.isLatin1()Z
compileOnly sun.util.locale.BaseLocale.<clinit>()V
compileOnly java.util.Locale.<init>(Lsun/util/locale/BaseLocale;Lsun/util/locale/LocaleExtensions;Ljava/util/Locale$1;)V
compileOnly java.util.Collections.unmodifiableSet(Ljava/util/Set;)Ljava/util/Set;
compileOnly java.lang.StringLatin1.regionMatchesCI([BI[BII)Z
compileOnly java.util.ImmutableCollections$MapN$1$1.next()Ljava/util/Map$Entry;
compileOnly java.lang.module.ResolvedModule.hashCode()I
compileOnly sun.util.locale.InternalLocaleBuilder.<clinit>()V
compileOnly java.util.ArrayDeque.elementAt([Ljava/lang/Object;I)Ljava/lang/Object;
compileOnly jdk.internal.misc.SharedSecrets.getJavaIOFileDescriptorAccess()Ljdk/internal/misc/JavaIOFileDescriptorAccess;
compileOnly java.util.concurrent.ConcurrentHashMap.<clinit>()V
compileOnly java.security.CodeSource.<init>(Ljava/net/URL;[Ljava/security/CodeSigner;)V
compileOnly java.net.URI$Parser.parseHierarchical(II)I
compileOnly java.util.Collections$1.next()Ljava/lang/Object;
compileOnly sun.util.locale.LocaleObjectCache.get(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly sun.nio.cs.StreamEncoder.isOpen()Z
compileOnly java.util.HashMap$KeyIterator.<init>(Ljava/util/HashMap;)V
compileOnly jdk.internal.module.Builder.requires([Ljava/lang/module/ModuleDescriptor$Requires;)Ljdk/internal/module/Builder;
compileOnly java.util.Locale$LocaleKey.<init>(Lsun/util/locale/BaseLocale;Lsun/util/locale/LocaleExtensions;Ljava/util/Locale$1;)V
compileOnly java.lang.reflect.Constructor.getDeclaringClass()Ljava/lang/Class;
compileOnly java.util.Collections.synchronizedSet(Ljava/util/Set;Ljava/lang/Object;)Ljava/util/Set;
compileOnly java.lang.String.isEmpty()Z
compileOnly jdk.internal.misc.Unsafe.getObject(Ljava/lang/Object;J)Ljava/lang/Object;
compileOnly java.lang.ThreadLocal.get()Ljava/lang/Object;
compileOnly java.io.File.getCanonicalFile()Ljava/io/File;
compileOnly java.lang.ClassLoader.getBuiltinAppClassLoader()Ljava/lang/ClassLoader;
compileOnly java.util.Collections$EmptyMap.<init>(Ljava/util/Collections$1;)V
compileOnly jdk.internal.reflect.ReflectionFactory.setLangReflectAccess(Ljdk/internal/reflect/LangReflectAccess;)V
compileOnly java.util.concurrent.ConcurrentHashMap.treeifyBin([Ljava/util/concurrent/ConcurrentHashMap$Node;I)V
compileOnly jdk.internal.module.ModuleReferenceImpl.hashCode()I
compileOnly java.util.AbstractList$Itr.<init>(Ljava/util/AbstractList;)V
compileOnly java.util.Properties.<clinit>()V
compileOnly java.lang.ClassLoader.<clinit>()V
compileOnly java.util.Properties$EntrySet.<init>(Ljava/util/Set;Ljava/util/Properties$1;)V
compileOnly java.util.HashMap.containsKey(Ljava/lang/Object;)Z
compileOnly java.util.ArrayList.grow(I)[Ljava/lang/Object;
compileOnly java.util.Locale$LocaleKey.access$300(Ljava/util/Locale$LocaleKey;)Lsun/util/locale/BaseLocale;
compileOnly java.util.ImmutableCollections$ListN.hashCode()I
compileOnly java.lang.NamedPackage.<init>(Ljava/lang/String;Ljava/lang/Module;)V
compileOnly java.util.Collections$EmptyMap.<init>()V
compileOnly jdk.internal.reflect.ConstructorAccessorImpl.<init>()V
compileOnly sun.nio.fs.LinuxFileSystemProvider.newFileSystem(Ljava/lang/String;)Lsun/nio/fs/LinuxFileSystem;
compileOnly java.lang.ref.PhantomReference.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
compileOnly java.lang.Character.toLowerCase(C)C
compileOnly jdk.internal.module.SystemModules$default.moduleHashes()[Ljdk/internal/module/ModuleHashes;
compileOnly java.lang.module.ModuleDescriptor$Provides.hashCode()I
compileOnly java.util.ArrayDeque.peekFirst()Ljava/lang/Object;
compileOnly java.nio.charset.CharsetEncoder.replaceWith([B)Ljava/nio/charset/CharsetEncoder;
compileOnly sun.util.locale.BaseLocale$Key.<init>(Ljava/lang/String;Ljava/lang/String;Lsun/util/locale/BaseLocale$1;)V
compileOnly java.net.URLConnection.getDefaultUseCaches(Ljava/lang/String;)Z
compileOnly jdk.internal.reflect.ReflectionFactory.newConstructorAccessor(Ljava/lang/reflect/Constructor;)Ljdk/internal/reflect/ConstructorAccessor;
compileOnly java.net.URI.access$100(CJJ)Z
compileOnly java.lang.Class.privateGetDeclaredConstructors(Z)[Ljava/lang/reflect/Constructor;
compileOnly java.util.Objects.requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly jdk.internal.loader.ClassLoaders.appClassLoader()Ljava/lang/ClassLoader;
compileOnly java.lang.Class.getPrimitiveClass(Ljava/lang/String;)Ljava/lang/Class;
compileOnly java.util.ArrayDeque.<init>(I)V
compileOnly java.security.AccessControlContext.calculateFields(Ljava/security/AccessControlContext;Ljava/security/AccessControlContext;[Ljava/security/Permission;)V
compileOnly java.lang.System$2.findBootstrapClassOrNull(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;
compileOnly jdk.internal.misc.Unsafe.putObjectVolatile(Ljava/lang/Object;JLjava/lang/Object;)V
compileOnly java.lang.Number.<init>()V
compileOnly java.net.URL.getProtocol()Ljava/lang/String;
compileOnly jdk.internal.module.ModuleBootstrap.addExtraReads(Ljava/lang/ModuleLayer;)V
compileOnly jdk.internal.misc.Unsafe.arrayIndexScale0(Ljava/lang/Class;)I
compileOnly java.util.Hashtable.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V
compileOnly jdk.internal.module.SystemModuleFinders$2.<init>(Ljava/lang/String;Ljava/net/URI;)V
compileOnly java.lang.ModuleLayer.checkGetClassLoaderPermission()V
compileOnly java.net.URL.<init>(Ljava/net/URL;Ljava/lang/String;Ljava/net/URLStreamHandler;)V
compileOnly java.io.FilePermission.init(I)V
compileOnly java.lang.Thread.isDaemon()Z
compileOnly java.lang.ClassLoader.checkCerts(Ljava/lang/String;Ljava/security/CodeSource;)V
compileOnly jdk.internal.module.ModuleBootstrap.initModulePatcher()Ljdk/internal/module/ModulePatcher;
compileOnly sun.nio.fs.UnixNativeDispatcher.<clinit>()V
compileOnly java.util.HashMap.putMapEntries(Ljava/util/Map;Z)V
compileOnly java.lang.Shutdown.runHooks()V
compileOnly java.util.ImmutableCollections$List1.get(I)Ljava/lang/Object;
compileOnly java.lang.ThreadLocal.createMap(Ljava/lang/Thread;Ljava/lang/Object;)V
compileOnly java.net.URI.toString()Ljava/lang/String;
compileOnly java.lang.System.arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
compileOnly java.net.URI.access$502(Ljava/net/URI;Ljava/lang/String;)Ljava/lang/String;
compileOnly java.util.ArrayList.<init>(I)V
compileOnly java.util.Stack.push(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.lang.module.Configuration.<init>()V
compileOnly java.net.URLStreamHandler.setURL(Ljava/net/URL;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
compileOnly sun.launcher.LauncherHelper.initOutput(Z)V
compileOnly java.lang.module.ModuleDescriptor$Version.toString()Ljava/lang/String;
compileOnly java.lang.String.lastIndexOf(II)I
compileOnly java.lang.ThreadLocal$ThreadLocalMap.cleanSomeSlots(II)Z
compileOnly java.lang.VersionProps.<clinit>()V
compileOnly sun.nio.fs.UnixPath.getFileName()Lsun/nio/fs/UnixPath;
compileOnly java.io.File.<init>(Ljava/lang/String;)V
compileOnly jdk.internal.reflect.NativeConstructorAccessorImpl.setParent(Ljdk/internal/reflect/DelegatingConstructorAccessorImpl;)V
compileOnly java.util.WeakHashMap.<clinit>()V
compileOnly sun.nio.fs.UnixPath.<init>(Lsun/nio/fs/UnixFileSystem;[B)V
compileOnly java.lang.Integer.getChars(II[B)I
compileOnly java.util.Locale$LocaleKey.equals(Ljava/lang/Object;)Z
compileOnly java.lang.reflect.Method.getName()Ljava/lang/String;
compileOnly sun.util.locale.BaseLocale.createInstance(Ljava/lang/String;Ljava/lang/String;)Lsun/util/locale/BaseLocale;
compileOnly jdk.internal.module.Builder.newRequires(Ljava/util/Set;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/module/ModuleDescriptor$Requires;
compileOnly java.lang.StringLatin1.indexOf([B[B)I
compileOnly java.util.LinkedHashMap.<init>()V
compileOnly java.lang.Integer.numberOfLeadingZeros(I)I
compileOnly java.util.HashMap.<init>(I)V
compileOnly java.lang.reflect.ReflectAccess.<init>()V
compileOnly java.lang.Class.getMethodsRecursive(Ljava/lang/String;[Ljava/lang/Class;Z)Ljava/lang/PublicMethods$MethodList;
compileOnly java.lang.NullPointerException.<init>()V
compileOnly jdk.internal.misc.Unsafe.putObject(Ljava/lang/Object;JLjava/lang/Object;)V
compileOnly java.util.AbstractCollection.toArray()[Ljava/lang/Object;
compileOnly jdk.internal.module.Builder.<init>(Ljava/lang/String;)V
compileOnly java.util.Set.of([Ljava/lang/Object;)Ljava/util/Set;
compileOnly java.io.FileDescriptor.registerCleanup()V
compileOnly java.io.BufferedWriter.flushBuffer()V
compileOnly java.lang.AbstractStringBuilder.checkRange(III)V
compileOnly java.lang.Boolean.<clinit>()V
compileOnly jdk.internal.loader.ClassLoaders$BootClassLoader.loadClassOrNull(Ljava/lang/String;)Ljava/lang/Class;
compileOnly jdk.internal.reflect.Reflection.filterMethods(Ljava/lang/Class;[Ljava/lang/reflect/Method;)[Ljava/lang/reflect/Method;
compileOnly sun.nio.fs.UnixNativeDispatcher.init()I
compileOnly java.lang.PublicMethods$MethodList.filter([Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Class;Z)Ljava/lang/PublicMethods$MethodList;
compileOnly java.lang.System.getProperty(Ljava/lang/String;)Ljava/lang/String;
compileOnly java.util.ImmutableCollections$MapN$1$1.hasNext()Z
compileOnly java.lang.module.ModuleDescriptor$Opens.isQualified()Z
compileOnly java.util.Hashtable.<init>(IF)V
compileOnly java.lang.invoke.MethodHandle.<clinit>()V
compileOnly sun.security.util.Debug.getInstance(Ljava/lang/String;Ljava/lang/String;)Lsun/security/util/Debug;
compileOnly sun.util.locale.BaseLocale$Key.<clinit>()V
compileOnly java.io.FileOutputStream.<init>(Ljava/io/FileDescriptor;)V
compileOnly java.lang.module.ModuleDescriptor$Opens.<init>(Ljava/util/Set;Ljava/lang/String;Ljava/util/Set;Z)V
compileOnly java.security.ProtectionDomain$JavaSecurityAccessImpl.<init>()V
compileOnly java.lang.PublicMethods$Key.matches(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Class;)Z
compileOnly java.util.ImmutableCollections$MapN.probe(Ljava/lang/Object;)I
compileOnly java.util.WeakHashMap.eq(Ljava/lang/Object;Ljava/lang/Object;)Z
compileOnly jdk.internal.loader.URLClassPath$Loader.<init>(Ljava/net/URL;)V
compileOnly java.net.URI.getHost()Ljava/lang/String;
compileOnly java.util.ImmutableCollections$SetN.probe(Ljava/lang/Object;)I
compileOnly jdk.internal.module.ModuleHashes$Builder.hashForModule(Ljava/lang/String;[B)Ljdk/internal/module/ModuleHashes$Builder;
compileOnly java.lang.reflect.AccessibleObject.checkCanSetAccessible(Ljava/lang/Class;Ljava/lang/Class;Z)Z
compileOnly jdk.internal.module.SystemModuleFinders$SystemModuleFinder.<init>([Ljava/lang/module/ModuleReference;[Ljava/util/Map$Entry;)V
compileOnly java.lang.Class.<clinit>()V
compileOnly java.io.UnixFileSystem.getSeparator()C
compileOnly java.lang.ModuleLayer.empty()Ljava/lang/ModuleLayer;
compileOnly java.lang.Module.getName()Ljava/lang/String;
compileOnly java.lang.reflect.AccessibleObject.<clinit>()V
compileOnly jdk.internal.misc.InnocuousThread.newSystemThread(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
compileOnly java.util.Collections$SetFromMap.<init>(Ljava/util/Map;)V
compileOnly java.io.File.getPath()Ljava/lang/String;
compileOnly java.lang.Class.forName(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
compileOnly java.lang.Thread.init(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;JLjava/security/AccessControlContext;Z)V
compileOnly java.util.concurrent.CopyOnWriteArrayList.add(Ljava/lang/Object;)Z
compileOnly java.security.CodeSource.getLocationNoFragString()Ljava/lang/String;
compileOnly java.io.FileOutputStream.initIDs()V
compileOnly java.lang.String.hashCode()I
compileOnly java.lang.ref.Reference$1.<init>()V
compileOnly sun.nio.cs.UTF_8.<clinit>()V
compileOnly java.lang.Float.<clinit>()V
compileOnly java.net.URL$DefaultFactory.<init>()V
compileOnly java.lang.Thread.start0()V
compileOnly java.net.URI.defineString()Ljava/lang/String;
compileOnly java.util.Hashtable.<init>(Ljava/lang/Void;)V
compileOnly java.lang.ref.Cleaner$1.apply(Ljava/lang/ref/Cleaner;)Ljdk/internal/ref/CleanerImpl;
compileOnly jdk.internal.module.Modules.<clinit>()V
compileOnly java.lang.ModuleLayer.bindToLoader(Ljava/lang/ClassLoader;)V
compileOnly sun.nio.cs.StandardCharsets.aliases_ISO_8859_1()[Ljava/lang/String;
compileOnly java.lang.module.ModuleDescriptor.packages()Ljava/util/Set;
compileOnly java.io.File.<clinit>()V
compileOnly java.lang.ref.SoftReference.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
compileOnly java.lang.module.ModuleDescriptor$Opens.<init>(Ljava/util/Set;Ljava/lang/String;Ljava/util/Set;ZLjava/lang/module/ModuleDescriptor$1;)V
compileOnly sun.security.util.Debug.isOn(Ljava/lang/String;)Z
compileOnly java.lang.Thread.isInterrupted(Z)Z
compileOnly java.util.AbstractMap$1.<init>(Ljava/util/AbstractMap;)V
compileOnly java.util.Properties.<init>(Ljava/util/Properties;I)V
compileOnly java.io.File.<init>(Ljava/io/File;Ljava/lang/String;)V
compileOnly jdk.internal.loader.ClassLoaders.platformClassLoader()Ljava/lang/ClassLoader;
compileOnly java.net.URI.hashIgnoringCase(ILjava/lang/String;)I
compileOnly java.lang.ThreadLocal.set(Ljava/lang/Object;)V
compileOnly jdk.internal.ref.CleanerImpl$SoftCleanableRef.<init>()V
compileOnly java.util.ImmutableCollections$Set2$1.hasNext()Z
compileOnly java.util.WeakHashMap$KeySet.<init>(Ljava/util/WeakHashMap;Ljava/util/WeakHashMap$1;)V
compileOnly java.util.ImmutableCollections$Set0.<clinit>()V
compileOnly java.io.BufferedWriter.write(Ljava/lang/String;II)V
compileOnly jdk.internal.module.Builder.<clinit>()V
compileOnly java.util.ImmutableCollections$Set1.size()I
compileOnly java.util.Hashtable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.security.SecureClassLoader$1.apply(Ljava/security/SecureClassLoader$CodeSourceKey;)Ljava/security/ProtectionDomain;
compileOnly java.lang.Integer$IntegerCache.<clinit>()V
compileOnly java.io.ExpiringCache.<init>(J)V
compileOnly java.lang.Thread.isAlive()Z
compileOnly jdk.internal.module.Builder.newProvides(Ljava/lang/String;Ljava/util/List;)Ljava/lang/module/ModuleDescriptor$Provides;
compileOnly java.lang.VersionProps.init()V
compileOnly java.lang.ThreadLocal$ThreadLocalMap.nextIndex(II)I
compileOnly jdk.internal.loader.URLClassPath$FileLoader$1.getContentLength()I
compileOnly java.util.HashMap$Values.size()I
compileOnly jdk.internal.module.ModulePatcher.patchIfNeeded(Ljava/lang/module/ModuleReference;)Ljava/lang/module/ModuleReference;
compileOnly java.security.Permission.<init>(Ljava/lang/String;)V
compileOnly jdk.internal.loader.URLClassPath.getLoader(Ljava/net/URL;)Ljdk/internal/loader/URLClassPath$Loader;
compileOnly java.lang.Class.getConstructor0([Ljava/lang/Class;I)Ljava/lang/reflect/Constructor;
compileOnly java.net.URI.getRawQuery()Ljava/lang/String;
compileOnly java.lang.String.toLowerCase(Ljava/util/Locale;)Ljava/lang/String;
compileOnly java.util.HashMap$KeySet.iterator()Ljava/util/Iterator;
compileOnly sun.nio.fs.UnixNativeDispatcher$1.<init>()V
compileOnly jdk.internal.loader.ClassLoaders.bootLoader()Ljdk/internal/loader/BuiltinClassLoader;
compileOnly java.lang.module.ModuleDescriptor$Exports.targets()Ljava/util/Set;
compileOnly sun.nio.fs.DefaultFileSystemProvider.create()Ljava/nio/file/spi/FileSystemProvider;
compileOnly sun.nio.cs.StreamEncoder.implFlushBuffer()V
compileOnly java.lang.ModuleLayer.<init>(Ljava/lang/module/Configuration;Ljava/util/List;Ljava/util/function/Function;)V
compileOnly java.util.concurrent.ConcurrentHashMap.addCount(JI)V
compileOnly java.net.URI.getScheme()Ljava/lang/String;
compileOnly jdk.internal.misc.Unsafe.isBigEndian()Z
compileOnly jdk.internal.misc.SharedSecrets.<clinit>()V
compileOnly java.lang.Module.addReads0(Ljava/lang/Module;Ljava/lang/Module;)V
compileOnly java.lang.Class.getModule()Ljava/lang/Module;
compileOnly sun.nio.fs.UnixPath.compareTo(Ljava/nio/file/Path;)I
compileOnly java.nio.Buffer.<clinit>()V
compileOnly jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class;
compileOnly jdk.internal.module.ModuleLoaderMap.bootModules()Ljava/util/Set;
compileOnly java.io.File.length()J
compileOnly java.util.ImmutableCollections$List0.instance()Ljava/util/ImmutableCollections$List0;
compileOnly java.lang.ThreadLocal$ThreadLocalMap.getEntryAfterMiss(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
compileOnly java.security.ProtectionDomain$Key.<init>(Ljava/security/ProtectionDomain;)V
compileOnly java.lang.module.ModuleDescriptor.isOpen()Z
compileOnly jdk.internal.module.IllegalAccessLogger.<init>(Ljdk/internal/module/IllegalAccessLogger$Mode;Ljava/io/PrintStream;Ljava/util/Map;Ljava/util/Map;Ljdk/internal/module/IllegalAccessLogger$1;)V
compileOnly java.lang.ModuleLayer$Controller.layer()Ljava/lang/ModuleLayer;
compileOnly java.lang.Module.addExports0(Ljava/lang/Module;Ljava/lang/String;Ljava/lang/Module;)V
compileOnly java.lang.ref.SoftReference.get()Ljava/lang/Object;
compileOnly java.util.ArrayList$Itr.<init>(Ljava/util/ArrayList;)V
compileOnly jdk.internal.loader.AbstractClassLoaderValue.map(Ljava/lang/ClassLoader;)Ljava/util/concurrent/ConcurrentHashMap;
compileOnly java.lang.Thread.registerNatives()V
compileOnly java.io.FilePermission$1.<init>()V
compileOnly java.util.ImmutableCollections$AbstractImmutableMap.<init>()V
compileOnly java.lang.ThreadGroup.getParent()Ljava/lang/ThreadGroup;
compileOnly java.util.ImmutableCollections$List2.hashCode()I
compileOnly java.io.UnixFileSystem.getBooleanAttributes0(Ljava/io/File;)I
compileOnly sun.nio.fs.LinuxFileSystemProvider.<init>()V
compileOnly java.nio.CharBuffer.limit(I)Ljava/nio/Buffer;
compileOnly java.util.Hashtable.remove(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly jdk.internal.loader.URLClassPath$FileLoader$1.getInputStream()Ljava/io/InputStream;
compileOnly java.util.ArrayDeque.dec(II)I
compileOnly java.lang.ClassLoader.getSystemClassLoader()Ljava/lang/ClassLoader;
compileOnly java.security.BasicPermissionCollection.add(Ljava/security/Permission;)V
compileOnly java.lang.Double.<clinit>()V
compileOnly jdk.internal.misc.Unsafe.objectFieldOffset(Ljava/lang/Class;Ljava/lang/String;)J
compileOnly java.lang.ClassLoader.<init>(Ljava/lang/Void;Ljava/lang/String;Ljava/lang/ClassLoader;)V
compileOnly jdk.internal.module.Builder.modifiers()Ljava/util/Set;
compileOnly java.lang.reflect.Constructor.getConstructorAccessor()Ljdk/internal/reflect/ConstructorAccessor;
compileOnly java.util.Collections$UnmodifiableMap.get(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.lang.System.registerNatives()V
compileOnly jdk.internal.module.ModuleBootstrap.addModules()Ljava/util/Set;
compileOnly java.util.concurrent.ConcurrentHashMap$ForwardingNode.<init>([Ljava/util/concurrent/ConcurrentHashMap$Node;)V
compileOnly java.lang.StringBuilder.toString()Ljava/lang/String;
compileOnly sun.nio.cs.StreamEncoder.flushBuffer()V
compileOnly jdk.internal.module.Builder.newRequires(Ljava/util/Set;Ljava/lang/String;)Ljava/lang/module/ModuleDescriptor$Requires;
compileOnly sun.nio.fs.UnixFileSystem.normalizeNativePath([C)[C
compileOnly java.util.List.of(Ljava/lang/Object;)Ljava/util/List;
compileOnly java.net.URL.toLowerCase(Ljava/lang/String;)Ljava/lang/String;
compileOnly java.lang.ClassLoader$NativeLibrary.load0(Ljava/lang/String;Z)Z
compileOnly java.util.Collections.emptySet()Ljava/util/Set;
compileOnly java.util.HashMap$Node.getKey()Ljava/lang/Object;
compileOnly java.nio.file.spi.FileSystemProvider.<init>(Ljava/lang/Void;)V
compileOnly java.lang.ref.ReferenceQueue$Lock.<init>()V
compileOnly java.lang.ClassLoader.initSystemClassLoader()Ljava/lang/ClassLoader;
compileOnly java.util.List.of([Ljava/lang/Object;)Ljava/util/List;
compileOnly java.lang.ClassLoader$NativeLibrary.loadLibrary(Ljava/lang/Class;Ljava/lang/String;Z)Z
compileOnly java.lang.StringBuilder.<init>()V
compileOnly java.lang.ThreadGroup.addUnstarted()V
compileOnly java.lang.Thread.getPriority()I
compileOnly java.io.FileInputStream$1.close()V
compileOnly jdk.internal.reflect.Reflection.filter([Ljava/lang/reflect/Member;[Ljava/lang/String;)[Ljava/lang/reflect/Member;
compileOnly java.io.File.isInvalid()Z
compileOnly jdk.internal.loader.BuiltinClassLoader.<clinit>()V
compileOnly java.lang.Math.min(FF)F
compileOnly jdk.internal.module.ModuleBootstrap.decode(Ljava/lang/String;)Ljava/util/Map;
compileOnly java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V
compileOnly java.lang.Character.digit(II)I
compileOnly java.lang.System.getProperties()Ljava/util/Properties;
compileOnly java.net.URI.toLower(C)I
compileOnly java.nio.CharBuffer.array()[C
compileOnly jdk.internal.ref.CleanerImpl.<clinit>()V
compileOnly jdk.internal.misc.SharedSecrets.setJavaNetURLAccess(Ljdk/internal/misc/JavaNetURLAccess;)V
compileOnly jdk.internal.module.ModuleTarget.targetPlatform()Ljava/lang/String;
compileOnly sun.nio.cs.UTF_8.newEncoder()Ljava/nio/charset/CharsetEncoder;
compileOnly jdk.internal.reflect.ReflectionFactory.<clinit>()V
compileOnly sun.net.www.ParseUtil.match(CJJ)Z
compileOnly sun.nio.cs.US_ASCII.<init>()V
compileOnly sun.util.locale.LocaleObjectCache.cleanStaleEntries()V
compileOnly sun.net.www.ParseUtil.firstEncodeIndex(Ljava/lang/String;)I
compileOnly java.lang.ref.ReferenceQueue$Null.<init>(Ljava/lang/ref/ReferenceQueue$1;)V
compileOnly java.lang.Object.equals(Ljava/lang/Object;)Z
compileOnly java.lang.module.ModuleDescriptor$Version.parse(Ljava/lang/String;)Ljava/lang/module/ModuleDescriptor$Version;
compileOnly java.security.ProtectionDomain$2.<init>()V
compileOnly java.lang.Class$Atomic.casReflectionData(Ljava/lang/Class;Ljava/lang/ref/SoftReference;Ljava/lang/ref/SoftReference;)Z
compileOnly jdk.internal.misc.Unsafe.unalignedAccess0()Z
compileOnly java.lang.reflect.Method.getReturnType()Ljava/lang/Class;
compileOnly sun.nio.cs.StreamEncoder.implWrite([CII)V
compileOnly java.io.UnixFileSystem.canonicalize0(Ljava/lang/String;)Ljava/lang/String;
compileOnly java.lang.PublicMethods$MethodList.<init>(Ljava/lang/reflect/Method;)V
compileOnly java.lang.Class$Atomic.<clinit>()V
compileOnly java.util.Set.of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
compileOnly jdk.internal.misc.InnocuousThread.<clinit>()V
compileOnly java.lang.ThreadLocal$ThreadLocalMap.access$000(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
compileOnly java.lang.module.ModuleDescriptor$1.newRequires(Ljava/util/Set;Ljava/lang/String;Ljava/lang/module/ModuleDescriptor$Version;)Ljava/lang/module/ModuleDescriptor$Requires;
compileOnly jdk.internal.loader.Resource.getByteBuffer()Ljava/nio/ByteBuffer;
compileOnly java.util.HashMap.get(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
compileOnly java.util.ImmutableCollections$MapN$1.iterator()Ljava/util/Iterator;
compileOnly java.util.Dictionary.<init>()V
compileOnly java.nio.CharBuffer.arrayOffset()I
compileOnly java.util.AbstractSet.<init>()V
compileOnly java.io.PrintStream.ensureOpen()V
compileOnly java.lang.reflect.Array.newInstance(Ljava/lang/Class;I)Ljava/lang/Object;
compileOnly java.lang.String.length()I
compileOnly java.lang.Thread.currentThread()Ljava/lang/Thread;
compileOnly java.util.Map.getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
compileOnly jdk.internal.reflect.Reflection.getClassAccessFlags(Ljava/lang/Class;)I
compileOnly java.lang.ClassLoader.trySetObjectField(Ljava/lang/String;Ljava/lang/Object;)Z
compileOnly sun.util.locale.BaseLocale$Cache.<clinit>()V
compileOnly java.nio.Buffer.hasRemaining()Z
compileOnly jdk.internal.misc.Unsafe.addressSize0()I
compileOnly java.util.ImmutableCollections$SetN.iterator()Ljava/util/Iterator;
compileOnly java.nio.ByteBuffer.array()[B
compileOnly java.util.concurrent.ConcurrentHashMap.<init>(IFI)V
compileOnly sun.net.www.ParseUtil.decode(Ljava/lang/String;)Ljava/lang/String;
compileOnly sun.nio.fs.UnixPath.<init>(Lsun/nio/fs/UnixFileSystem;Ljava/lang/String;)V
compileOnly java.lang.String.coder()B
compileOnly java.lang.reflect.AccessibleObject.setAccessible0(Z)Z
compileOnly java.io.BufferedInputStream.<init>(Ljava/io/InputStream;I)V
compileOnly java.lang.Object.registerNatives()V
compileOnly java.nio.CharBuffer.position(I)Ljava/nio/Buffer;
compileOnly java.util.ArrayDeque.push(Ljava/lang/Object;)V
compileOnly java.lang.ClassLoader$ParallelLoaders.<clinit>()V
compileOnly java.util.StringJoiner.<init>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)V
compileOnly java.io.FileSystem.<clinit>()V
compileOnly jdk.internal.module.ModuleBootstrap.<clinit>()V
compileOnly java.lang.module.ModuleDescriptor$1.newModuleDescriptor(Ljava/lang/String;Ljava/lang/module/ModuleDescriptor$Version;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;I)Ljava/lang/module/ModuleDescriptor;
compileOnly java.lang.Class.isAssignableFrom(Ljava/lang/Class;)Z
compileOnly java.lang.Boolean.<init>(Z)V
compileOnly java.lang.String.indexOf(Ljava/lang/String;I)I
compileOnly java.lang.module.ModuleDescriptor$Exports.hashCode()I
compileOnly java.lang.Module.getDescriptor()Ljava/lang/module/ModuleDescriptor;
compileOnly java.lang.Thread.setPriority(I)V
compileOnly sun.util.locale.BaseLocale.<init>(Ljava/lang/String;Ljava/lang/String;)V
compileOnly java.util.Locale$LocaleKey.access$400(Ljava/util/Locale$LocaleKey;)Lsun/util/locale/LocaleExtensions;
compileOnly java.lang.Integer.parseInt(Ljava/lang/String;)I
compileOnly java.util.AbstractCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
compileOnly java.lang.Module.<init>(Ljava/lang/ClassLoader;)V
compileOnly java.lang.ClassLoader.findLoadedClass0(Ljava/lang/String;)Ljava/lang/Class;
compileOnly jdk.internal.misc.InnocuousThread.<init>(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/ClassLoader;Ljdk/internal/misc/InnocuousThread$1;)V
compileOnly java.lang.StringLatin1.lastIndexOf([BII)I
compileOnly java.lang.Thread.<init>(Ljava/lang/ThreadGroup;Ljava/lang/String;)V
compileOnly java.lang.module.Configuration.<init>(Ljava/lang/module/ModuleFinder;Ljava/util/Map;)V
compileOnly java.lang.module.ModuleDescriptor.equals(Ljava/lang/Object;)Z
compileOnly java.lang.System.nanoTime()J
compileOnly java.security.SecureClassLoader$CodeSourceKey.hashCode()I
compileOnly java.security.CodeSource.<init>(Ljava/net/URL;[Ljava/security/cert/Certificate;)V
compileOnly java.util.KeyValueHolder.getValue()Ljava/lang/Object;
compileOnly java.net.URL.getPath()Ljava/lang/String;
compileOnly java.util.HashSet.iterator()Ljava/util/Iterator;
compileOnly java.lang.reflect.ReflectAccess.copyMethod(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
compileOnly java.lang.reflect.Modifier.isAbstract(I)Z
compileOnly jdk.internal.module.IllegalAccessLogger.<clinit>()V
compileOnly java.net.URL.getQuery()Ljava/lang/String;
compileOnly java.lang.StringCoding.decode(Ljava/lang/String;[BII)Ljava/lang/StringCoding$Result;
compileOnly java.net.URI$Parser.parse(Z)V
compileOnly java.lang.Throwable.<clinit>()V
compileOnly java.lang.Character.toLowerCase(I)I
compileOnly sun.nio.fs.UnixPath.getFileSystem()Lsun/nio/fs/UnixFileSystem;
compileOnly java.lang.ClassLoader.findBuiltinLib(Ljava/lang/String;)Ljava/lang/String;
compileOnly jdk.internal.reflect.Reflection.isSubclassOf(Ljava/lang/Class;Ljava/lang/Class;)Z
compileOnly java.lang.Class$1.run()Ljava/lang/Void;
compileOnly java.nio.ByteBuffer.limit(I)Ljava/nio/ByteBuffer;
compileOnly java.lang.ClassLoader.findLoadedClass(Ljava/lang/String;)Ljava/lang/Class;
compileOnly java.lang.module.ResolvedModule.reads()Ljava/util/Set;
compileOnly java.io.FileDescriptor.access$100(Ljava/io/FileDescriptor;)Z
compileOnly java.util.Vector.add(Ljava/lang/Object;[Ljava/lang/Object;I)V
compileOnly java.util.concurrent.ConcurrentHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.lang.ModuleLayer.boot()Ljava/lang/ModuleLayer;
compileOnly jdk.internal.misc.InnocuousThread$2.<init>(Ljava/lang/Runnable;Ljava/lang/String;)V
compileOnly java.nio.charset.CharsetEncoder.<init>(Ljava/nio/charset/Charset;FF[B)V
compileOnly jdk.internal.reflect.Reflection.getCallerClass()Ljava/lang/Class;
compileOnly java.net.URL.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
compileOnly java.lang.Class.getPackageName()Ljava/lang/String;
compileOnly jdk.internal.module.SystemModules$default.exportedPackagesToOpen()Ljava/util/Map;
compileOnly java.net.URL.<clinit>()V
compileOnly java.lang.CharacterDataLatin1.<clinit>()V
compileOnly java.util.ImmutableCollections$SetN$1.next()Ljava/lang/Object;
compileOnly java.io.ExpiringCache.get(Ljava/lang/String;)Ljava/lang/String;
compileOnly java.util.ArrayList.newCapacity(I)I
compileOnly jdk.internal.module.Modules.defineModule(Ljava/lang/ClassLoader;Ljava/lang/module/ModuleDescriptor;Ljava/net/URI;)Ljava/lang/Module;
compileOnly java.io.FileDescriptor.access$000(Ljava/io/FileDescriptor;)I
compileOnly java.security.Permissions.add(Ljava/security/Permission;)V
compileOnly java.lang.Class.isPrimitive()Z
compileOnly java.util.ImmutableCollections$List0.<clinit>()V
compileOnly java.io.FileDescriptor.getAppend(I)Z
compileOnly java.nio.ByteOrder.<init>(Ljava/lang/String;)V
compileOnly java.util.concurrent.ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;
compileOnly sun.nio.cs.StreamEncoder.write([CII)V
compileOnly java.nio.charset.Charset.cache(Ljava/lang/String;Ljava/nio/charset/Charset;)V
compileOnly java.security.CodeSource.getCertificates()[Ljava/security/cert/Certificate;
compileOnly java.net.URL$DefaultFactory.<init>(Ljava/net/URL$1;)V
compileOnly jdk.internal.loader.Resource.<init>()V
compileOnly java.util.Properties.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.io.ExpiringCache.<init>()V
compileOnly java.lang.Module.findModule(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;)Ljava/lang/Module;
compileOnly jdk.internal.ref.CleanerImpl.setCleanerImplAccess(Ljava/util/function/Function;)V
compileOnly java.net.URL.set(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
compileOnly java.net.URL.getURLStreamHandler(Ljava/lang/String;)Ljava/net/URLStreamHandler;
compileOnly java.nio.charset.spi.CharsetProvider.<init>()V
compileOnly java.util.ArrayList.elementData(I)Ljava/lang/Object;
compileOnly java.lang.Module.addExportsToAll0(Ljava/lang/Module;Ljava/lang/String;)V
compileOnly java.util.AbstractMap.<init>()V
compileOnly java.lang.ref.ReferenceQueue.reallyPoll()Ljava/lang/ref/Reference;
compileOnly sun.nio.fs.UnixFileSystemProvider.checkUri(Ljava/net/URI;)V
compileOnly java.io.ObjectStreamField.<init>(Ljava/lang/String;Ljava/lang/Class;)V
compileOnly java.nio.charset.Charset.forName(Ljava/lang/String;)Ljava/nio/charset/Charset;
compileOnly java.util.Properties$EntrySet.<init>(Ljava/util/Set;)V
compileOnly jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.lang.Integer.hashCode(I)I
compileOnly jdk.internal.module.ModuleBootstrap$Counters.<clinit>()V
compileOnly java.util.Arrays.copyOf([BI)[B
compileOnly java.util.HashMap$ValueIterator.<init>(Ljava/util/HashMap;)V
compileOnly java.util.HashMap.afterNodeAccess(Ljava/util/HashMap$Node;)V
compileOnly jdk.internal.module.ModuleBootstrap$2.hasNext()Z
compileOnly sun.util.locale.LocaleUtils.isEmpty(Ljava/lang/String;)Z
compileOnly java.io.PrintStream.newLine()V
compileOnly java.io.File.<init>(Ljava/lang/String;I)V
compileOnly java.lang.Thread.<clinit>()V
compileOnly jdk.internal.reflect.ReflectionFactory$GetReflectionFactoryAction.<init>()V
compileOnly java.net.URI.create(Ljava/lang/String;)Ljava/net/URI;
compileOnly java.util.concurrent.ConcurrentHashMap.remove(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.lang.module.ModuleDescriptor$Exports.isQualified()Z
compileOnly jdk.internal.misc.Unsafe.getUnsafe()Ljdk/internal/misc/Unsafe;
compileOnly java.lang.Thread.start()V
compileOnly java.lang.ThreadLocal.<clinit>()V
compileOnly java.lang.Math.min(II)I
compileOnly java.util.concurrent.atomic.AtomicInteger.<clinit>()V
compileOnly java.lang.String.startsWith(Ljava/lang/String;)Z
compileOnly java.util.ArrayList.<clinit>()V
compileOnly java.lang.System.<clinit>()V
compileOnly jdk.internal.ref.CleanerFactory.cleaner()Ljava/lang/ref/Cleaner;
compileOnly java.util.Vector.elementAt(I)Ljava/lang/Object;
compileOnly java.lang.module.ModuleDescriptor$Exports.<init>(Ljava/util/Set;Ljava/lang/String;Ljava/util/Set;Z)V
compileOnly jdk.internal.module.SystemModules$default.hasIncubatorModules()Z
compileOnly jdk.internal.reflect.ReflectionFactory.checkInitted()V
compileOnly jdk.internal.module.ServicesCatalog.getServicesCatalog(Ljava/lang/ClassLoader;)Ljdk/internal/module/ServicesCatalog;
compileOnly java.lang.StringCoding.<clinit>()V
compileOnly jdk.internal.module.ModuleBootstrap.patcher()Ljdk/internal/module/ModulePatcher;
compileOnly java.util.Properties.remove(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.lang.module.ModuleDescriptor$1.newExports(Ljava/util/Set;Ljava/lang/String;Ljava/util/Set;)Ljava/lang/module/ModuleDescriptor$Exports;
compileOnly jdk.internal.ref.CleanerImpl.getCleanerImpl(Ljava/lang/ref/Cleaner;)Ljdk/internal/ref/CleanerImpl;
compileOnly java.io.ExpiringCache.access$000(Ljava/io/ExpiringCache;)I
compileOnly jdk.internal.misc.SharedSecrets.setJavaLangRefAccess(Ljdk/internal/misc/JavaLangRefAccess;)V
compileOnly java.security.Permissions.<clinit>()V
compileOnly java.lang.Runtime.availableProcessors()I
compileOnly java.util.HashMap$HashIterator.hasNext()Z
compileOnly java.lang.ClassLoader.postDefineClass(Ljava/lang/Class;Ljava/security/ProtectionDomain;)V
compileOnly java.lang.ClassLoader.getNamedPackage(Ljava/lang/String;Ljava/lang/Module;)Ljava/lang/NamedPackage;
compileOnly java.io.FilePermissionCollection.<init>()V
compileOnly java.lang.Class.desiredAssertionStatus()Z
compileOnly java.lang.ref.Reference.processPendingReferences()V
compileOnly sun.nio.cs.UTF_8$Encoder.encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
compileOnly java.lang.Class.getModifiers()I
compileOnly java.lang.Class.asSubclass(Ljava/lang/Class;)Ljava/lang/Class;
compileOnly java.nio.HeapByteBuffer.<init>([BII)V
compileOnly java.lang.Boolean.booleanValue()Z
compileOnly java.lang.CharacterData.of(I)Ljava/lang/CharacterData;
compileOnly java.lang.ref.Cleaner.<clinit>()V
compileOnly java.lang.ClassLoader.checkPackageAccess(Ljava/lang/Class;Ljava/security/ProtectionDomain;)V
compileOnly java.nio.ByteBuffer.wrap([BII)Ljava/nio/ByteBuffer;
compileOnly java.lang.String.toString()Ljava/lang/String;
compileOnly java.util.HashMap$EntryIterator.next()Ljava/util/Map$Entry;
compileOnly java.util.Iterator.hasNext()Z
compileOnly java.util.WeakHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
compileOnly sun.nio.fs.UnixPath.checkNotNul(Ljava/lang/String;C)V
compileOnly sun.security.util.Debug.<clinit>()V
compileOnly jdk.internal.module.ServicesCatalog.providers(Ljava/lang/String;)Ljava/util/List;
compileOnly jdk.internal.module.Builder.build(I)Ljava/lang/module/ModuleDescriptor;
compileOnly java.nio.ByteBuffer.position(I)Ljava/nio/ByteBuffer;
compileOnly sun.util.locale.LocaleObjectCache.<init>(IFI)V
compileOnly jdk.internal.loader.URLClassPath$Loader.getBaseURL()Ljava/net/URL;
compileOnly java.util.ImmutableCollections$Set1.hashCode()I
compileOnly java.io.PrintStream.write(Ljava/lang/String;)V
compileOnly sun.nio.fs.UnixNativeDispatcher$1.run()Ljava/lang/Void;
compileOnly java.lang.module.Configuration.parents()Ljava/util/List;
compileOnly java.io.FileDescriptor$1.getAppend(Ljava/io/FileDescriptor;)Z
compileOnly java.lang.AbstractStringBuilder.append(I)Ljava/lang/AbstractStringBuilder;
compileOnly java.util.HashMap.putVal(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;
compileOnly java.util.concurrent.atomic.AtomicLong.VMSupportsCS8()Z
compileOnly java.lang.module.ModuleDescriptor$Exports.<init>(Ljava/util/Set;Ljava/lang/String;Ljava/util/Set;ZLjava/lang/module/ModuleDescriptor$1;)V
compileOnly sun.nio.fs.UnixPath.normalizeAndCheck(Ljava/lang/String;)Ljava/lang/String;
compileOnly java.lang.String.lastIndexOf(I)I
compileOnly java.nio.HeapByteBuffer.<clinit>()V
compileOnly sun.nio.cs.StreamEncoder.forOutputStreamWriter(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/lang/String;)Lsun/nio/cs/StreamEncoder;
compileOnly java.lang.Module.initExports(Ljava/lang/Module;Ljava/util/Map;)V
compileOnly jdk.internal.ref.CleanerImpl.start(Ljava/lang/ref/Cleaner;Ljava/util/concurrent/ThreadFactory;)V
compileOnly jdk.internal.module.SystemModules$default.hasSplitPackages()Z
compileOnly java.lang.CharacterDataLatin1.digit(II)I
compileOnly sun.util.locale.BaseLocale$Key.<init>(Ljava/lang/String;Ljava/lang/String;)V
compileOnly java.lang.String.startsWith(Ljava/lang/String;I)Z
compileOnly jdk.internal.module.IllegalAccessLogger$Builder.<init>(Ljdk/internal/module/IllegalAccessLogger$Mode;Ljava/io/PrintStream;)V
compileOnly java.lang.Integer.<init>(I)V
compileOnly java.util.WeakHashMap.expungeStaleEntries()V
compileOnly java.util.ImmutableCollections$List1.size()I
compileOnly java.lang.module.ModuleDescriptor.version()Ljava/util/Optional;
compileOnly java.lang.ThreadLocal.initialValue()Ljava/lang/Object;
compileOnly java.util.Collections$EmptyIterator.hasNext()Z
compileOnly java.util.AbstractList$Itr.hasNext()Z
compileOnly java.net.URLStreamHandler.getDefaultPort()I
compileOnly jdk.internal.module.ModuleBootstrap.addExtraExportsAndOpens(Ljava/lang/ModuleLayer;)Z
compileOnly sun.util.locale.InternalLocaleBuilder.clearExtensions()Lsun/util/locale/InternalLocaleBuilder;
compileOnly jdk.internal.module.SystemModuleFinders$3.<init>([B)V
compileOnly java.util.AbstractList.<init>()V
compileOnly java.io.FileOutputStream.writeBytes([BIIZ)V
compileOnly sun.util.locale.InternalLocaleBuilder.getLocaleExtensions()Lsun/util/locale/LocaleExtensions;
compileOnly java.lang.reflect.Constructor.setAccessible(Z)V
compileOnly java.util.ImmutableCollections$Set1.<init>(Ljava/lang/Object;)V
compileOnly jdk.internal.misc.Unsafe.compareAndSetObject(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
compileOnly java.lang.reflect.Modifier.isStatic(I)Z
compileOnly java.net.URI$Parser.checkChars(IIJJLjava/lang/String;)V
compileOnly java.lang.Class$1.run()Ljava/lang/Object;
compileOnly java.lang.String.getBytes([BIB)V
compileOnly java.lang.Object.<clinit>()V
compileOnly java.lang.ClassLoader.findNative(Ljava/lang/ClassLoader;Ljava/lang/String;)J
compileOnly java.util.LinkedHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly sun.util.locale.LocaleObjectCache.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.lang.module.ResolvedModule.<init>(Ljava/lang/module/Configuration;Ljava/lang/module/ModuleReference;)V
compileOnly java.util.HashMap$EntrySet.iterator()Ljava/util/Iterator;
compileOnly java.security.SecureClassLoader$1.apply(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.lang.Module.addExportsToAllUnnamed0(Ljava/lang/Module;Ljava/lang/String;)V
compileOnly jdk.internal.module.Builder.opens([Ljava/lang/module/ModuleDescriptor$Opens;)Ljdk/internal/module/Builder;
compileOnly java.nio.charset.CharsetEncoder.charset()Ljava/nio/charset/Charset;
compileOnly java.util.AbstractCollection.isEmpty()Z
compileOnly java.io.FilePermission.newPermissionCollection()Ljava/security/PermissionCollection;
compileOnly sun.nio.cs.UTF_8$Encoder.isLegalReplacement([B)Z
compileOnly jdk.internal.module.ModuleBootstrap$Counters.publish()V
compileOnly java.lang.ClassLoader$NativeLibrary.getFromClass()Ljava/lang/Class;
compileOnly sun.net.www.URLConnection.<init>(Ljava/net/URL;)V
compileOnly java.net.URI.getPort()I
compileOnly java.util.Collections$UnmodifiableCollection.<init>(Ljava/util/Collection;)V
compileOnly java.util.Locale.<init>(Lsun/util/locale/BaseLocale;Lsun/util/locale/LocaleExtensions;)V
compileOnly java.lang.Class.getMethod0(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
compileOnly java.lang.ref.Cleaner$1.apply(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.util.ArrayList.access$000(Ljava/util/ArrayList;)I
compileOnly java.io.PrintStream.write([BII)V
compileOnly java.nio.CharBuffer.hasArray()Z
compileOnly java.util.ImmutableCollections$MapN$1$1.<init>(Ljava/util/ImmutableCollections$MapN$1;)V
compileOnly java.util.Vector.addElement(Ljava/lang/Object;)V
compileOnly java.lang.invoke.MethodHandleStatics.<clinit>()V
compileOnly java.util.ArrayDeque.addFirst(Ljava/lang/Object;)V
compileOnly jdk.internal.misc.VM.isModuleSystemInited()Z
compileOnly java.util.Locale$LocaleKey.<init>(Lsun/util/locale/BaseLocale;Lsun/util/locale/LocaleExtensions;)V
compileOnly jdk.internal.reflect.ReflectionFactory.getReflectionFactory()Ljdk/internal/reflect/ReflectionFactory;
compileOnly java.nio.HeapCharBuffer.<init>([CII)V
compileOnly java.util.concurrent.ConcurrentHashMap.spread(I)I
compileOnly java.util.HashSet.add(Ljava/lang/Object;)Z
compileOnly java.lang.AbstractStringBuilder.appendChars(Ljava/lang/CharSequence;II)V
compileOnly jdk.internal.ref.CleanerImpl$PhantomCleanableRef.<init>()V
compileOnly java.util.Optional.of(Ljava/lang/Object;)Ljava/util/Optional;
compileOnly java.io.File.getAbsolutePath()Ljava/lang/String;
compileOnly java.net.URL.getDefaultPort()I
compileOnly java.io.FileInputStream.open(Ljava/lang/String;)V
compileOnly jdk.internal.reflect.DelegatingConstructorAccessorImpl.<init>(Ljdk/internal/reflect/ConstructorAccessorImpl;)V
compileOnly sun.nio.fs.UnixPath.equals(Ljava/lang/Object;)Z
compileOnly sun.net.www.ParseUtil.encodePath(Ljava/lang/String;)Ljava/lang/String;
compileOnly java.nio.ByteBuffer.<init>(IIII[BI)V
compileOnly java.util.LinkedHashMap.linkNodeLast(Ljava/util/LinkedHashMap$Entry;)V
compileOnly java.nio.CharBuffer.wrap([C)Ljava/nio/CharBuffer;
compileOnly java.lang.CharacterDataLatin1.toLowerCase(I)I
compileOnly jdk.internal.module.ModuleBootstrap.loadModules(Ljava/lang/module/Configuration;Ljava/util/function/Function;)V
compileOnly java.net.URL.<init>(Ljava/net/URL;Ljava/lang/String;)V
compileOnly sun.util.locale.LocaleObjectCache.normalizeKey(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.lang.module.ModuleDescriptor$Version.<init>(Ljava/lang/String;)V
compileOnly java.lang.StringLatin1.replace([BCC)Ljava/lang/String;
compileOnly java.lang.ClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class;
compileOnly java.lang.ThreadGroup.getMaxPriority()I
compileOnly java.lang.module.ModuleDescriptor$Version.takeNumber(Ljava/lang/String;ILjava/util/List;)I
compileOnly java.lang.module.ModuleDescriptor.<clinit>()V
compileOnly java.lang.Class.getMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
compileOnly java.util.ImmutableCollections$Set0.iterator()Ljava/util/Iterator;
compileOnly jdk.internal.ref.PhantomCleanable.isListEmpty()Z
compileOnly java.lang.AbstractStringBuilder.isLatin1()Z
compileOnly java.util.Objects.equals(Ljava/lang/Object;Ljava/lang/Object;)Z
compileOnly java.util.WeakHashMap.hash(Ljava/lang/Object;)I
compileOnly jdk.internal.misc.Unsafe.arrayBaseOffset(Ljava/lang/Class;)I
compileOnly java.security.BasicPermissionCollection.<init>(Ljava/lang/Class;)V
compileOnly jdk.internal.ref.CleanerImpl$CleanerCleanable.<init>(Ljava/lang/ref/Cleaner;)V
compileOnly java.io.OutputStream.<init>()V
compileOnly jdk.internal.misc.Unsafe.arrayBaseOffset0(Ljava/lang/Class;)I
compileOnly java.util.Collections$EmptySet.isEmpty()Z
compileOnly jdk.internal.misc.InnocuousThread$3.run()Ljava/lang/Object;
compileOnly java.util.Collections$EmptyList.<init>(Ljava/util/Collections$1;)V
compileOnly java.net.URI.getRawAuthority()Ljava/lang/String;
compileOnly java.lang.Class.getDeclaredConstructors0(Z)[Ljava/lang/reflect/Constructor;
compileOnly sun.nio.cs.UTF_8.updatePositions(Ljava/nio/Buffer;ILjava/nio/Buffer;I)V
compileOnly java.lang.ClassLoader$NativeLibrary.findEntry(Ljava/lang/String;)J
compileOnly sun.nio.cs.StreamEncoder.<init>(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/nio/charset/CharsetEncoder;)V
compileOnly java.lang.ref.Reference.<init>(Ljava/lang/Object;)V
compileOnly java.nio.charset.CoderResult$1.<init>()V
compileOnly java.lang.Class.getClassLoader()Ljava/lang/ClassLoader;
compileOnly java.io.BufferedOutputStream.write([BII)V
compileOnly java.lang.Enum.<init>(Ljava/lang/String;I)V
compileOnly java.lang.ModuleLayer.<clinit>()V
compileOnly java.net.URI$Parser.at(IIC)Z
compileOnly java.lang.Shutdown$Lock.<init>()V
compileOnly java.util.Collections$EmptyList.<init>()V
compileOnly jdk.internal.loader.URLClassPath.getLoader(I)Ljdk/internal/loader/URLClassPath$Loader;
compileOnly java.lang.StringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
compileOnly jdk.internal.ref.SoftCleanable.<init>()V
compileOnly sun.nio.fs.UnixNativeDispatcher$1.run()Ljava/lang/Object;
compileOnly java.util.ImmutableCollections.<clinit>()V
compileOnly java.io.Writer.write(Ljava/lang/String;)V
compileOnly java.lang.StringLatin1.charAt([BI)C
compileOnly java.util.ImmutableCollections$MapN.size()I
compileOnly sun.nio.fs.UnixPath.normalize()Ljava/nio/file/Path;
compileOnly java.util.ImmutableCollections$SetN.size()I
compileOnly java.util.concurrent.ConcurrentHashMap.resizeStamp(I)I
compileOnly java.util.Properties$EntrySet.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
compileOnly java.nio.charset.CoderResult$Cache.<init>()V
compileOnly jdk.internal.module.ModuleBootstrap.decode(Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/Map;
compileOnly java.lang.module.ModuleDescriptor$Provides.<init>(Ljava/lang/String;Ljava/util/List;ZLjava/lang/module/ModuleDescriptor$1;)V
compileOnly sun.security.util.Debug.getInstance(Ljava/lang/String;)Lsun/security/util/Debug;
compileOnly java.util.Vector.size()I
compileOnly java.lang.ClassLoader.getClassLoadingLock(Ljava/lang/String;)Ljava/lang/Object;
compileOnly java.lang.Thread.interrupted()Z
compileOnly java.net.URL.<init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/net/URLStreamHandler;)V
compileOnly java.nio.charset.CharsetEncoder.flush(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
compileOnly jdk.internal.loader.ClassLoaders$AppClassLoader.<init>(Ljdk/internal/loader/ClassLoaders$PlatformClassLoader;Ljdk/internal/loader/URLClassPath;)V
compileOnly java.util.Set.of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
compileOnly jdk.internal.module.ModulePatcher.<clinit>()V
compileOnly jdk.internal.reflect.MagicAccessorImpl.<init>()V
compileOnly java.lang.module.ModuleReference.descriptor()Ljava/lang/module/ModuleDescriptor;
compileOnly jdk.internal.loader.ClassLoaderValue.<init>()V
compileOnly java.util.Set.of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
compileOnly java.lang.module.Configuration.<clinit>()V
compileOnly java.lang.Class.arrayContentsEq([Ljava/lang/Object;[Ljava/lang/Object;)Z
compileOnly jdk.internal.misc.VM.saveAndRemoveProperties(Ljava/util/Properties;)V
compileOnly sun.net.www.ParseUtil.<clinit>()V
compileOnly java.lang.StringLatin1.newString([BII)Ljava/lang/String;
compileOnly sun.net.www.protocol.file.FileURLConnection.getPermission()Ljava/security/Permission;
compileOnly java.util.concurrent.ConcurrentHashMap$EntrySetView.<init>(Ljava/util/concurrent/ConcurrentHashMap;)V
compileOnly java.lang.Runtime.getRuntime()Ljava/lang/Runtime;
compileOnly java.nio.charset.CharsetEncoder.<clinit>()V
compileOnly java.lang.module.ResolvedModule.equals(Ljava/lang/Object;)Z
compileOnly jdk.internal.misc.Unsafe.getObjectAcquire(Ljava/lang/Object;J)Ljava/lang/Object;
compileOnly sun.util.locale.BaseLocale.getInstance(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lsun/util/locale/BaseLocale;
compileOnly java.nio.Buffer.<init>(IIII)V
compileOnly java.lang.module.ResolvedModule.configuration()Ljava/lang/module/Configuration;
compileOnly java.util.concurrent.ConcurrentHashMap$Traverser.<init>([Ljava/util/concurrent/ConcurrentHashMap$Node;III)V
compileOnly java.net.URL.toExternalForm()Ljava/lang/String;
compileOnly java.util.HashMap$KeyIterator.next()Ljava/lang/Object;
compileOnly java.lang.Class.newInstance()Ljava/lang/Object;
compileOnly java.lang.AbstractStringBuilder.append(C)Ljava/lang/AbstractStringBuilder;
compileOnly jdk.internal.misc.VM.initLevel(I)V
compileOnly java.lang.ref.ReferenceQueue$Null.<init>()V
compileOnly java.lang.StringCoding.lookupCharset(Ljava/lang/String;)Ljava/nio/charset/Charset;
compileOnly jdk.internal.module.ModuleReferenceImpl.equals(Ljava/lang/Object;)Z
compileOnly sun.nio.cs.StandardCharsets.charsetForName(Ljava/lang/String;)Ljava/nio/charset/Charset;
compileOnly java.security.SecureClassLoader$CodeSourceKey.<init>(Ljava/security/CodeSource;)V
compileOnly sun.nio.fs.UnixPath.encode(Lsun/nio/fs/UnixFileSystem;Ljava/lang/String;)[B
compileOnly java.lang.PublicMethods$MethodList.getMostSpecific()Ljava/lang/reflect/Method;
compileOnly java.security.Permissions.getPermissionCollection(Ljava/security/Permission;Z)Ljava/security/PermissionCollection;
compileOnly java.io.UnixFileSystem.getPathSeparator()C
compileOnly java.lang.ref.Finalizer$FinalizerThread.<init>(Ljava/lang/ThreadGroup;)V
compileOnly java.net.URI$1.create(Ljava/lang/String;Ljava/lang/String;)Ljava/net/URI;
compileOnly java.lang.Runtime.<init>()V
compileOnly java.io.FilePermission.<init>(Ljava/lang/String;Ljava/lang/String;)V
compileOnly java.util.concurrent.ConcurrentHashMap$CollectionView.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
compileOnly java.net.URL.getUserInfo()Ljava/lang/String;
compileOnly java.util.Collections$UnmodifiableCollection$1.hasNext()Z
compileOnly java.lang.module.ModuleDescriptor$Opens.equals(Ljava/lang/Object;)Z
compileOnly jdk.internal.module.ModuleBootstrap.boot()Ljava/lang/ModuleLayer;
compileOnly jdk.internal.ref.PhantomCleanable.<init>()V
compileOnly java.util.ArrayList.get(I)Ljava/lang/Object;
compileOnly java.lang.module.ModuleDescriptor$Provides.equals(Ljava/lang/Object;)Z
compileOnly java.lang.Terminator$1.<init>()V
compileOnly jdk.internal.module.ModuleBootstrap.finderFor(Ljava/lang/String;)Ljava/lang/module/ModuleFinder;
compileOnly jdk.internal.misc.VM.getSavedProperty(Ljava/lang/String;)Ljava/lang/String;
compileOnly sun.nio.cs.StandardCharsets.aliases_UTF_8()[Ljava/lang/String;
compileOnly jdk.internal.misc.SharedSecrets.setJavaIOFilePermissionAccess(Ljdk/internal/misc/JavaIOFilePermissionAccess;)V
compileOnly java.util.ImmutableCollections$AbstractImmutableSet.<init>()V
compileOnly java.nio.charset.CharsetEncoder.implReplaceWith([B)V
compileOnly jdk.internal.module.Builder.newExports(Ljava/util/Set;Ljava/lang/String;Ljava/util/Set;)Ljava/lang/module/ModuleDescriptor$Exports;
compileOnly java.lang.Double.longBitsToDouble(J)D
compileOnly java.lang.ref.Finalizer.<clinit>()V
compileOnly java.net.URL$DefaultFactory.<clinit>()V
compileOnly java.security.ProtectionDomain.<init>(Ljava/security/CodeSource;Ljava/security/PermissionCollection;Ljava/lang/ClassLoader;[Ljava/security/Principal;)V
compileOnly jdk.internal.module.ModuleLoaderMap$Mapper.apply(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly sun.net.www.protocol.file.Handler.parseURL(Ljava/net/URL;Ljava/lang/String;II)V
compileOnly java.lang.Class.getName0()Ljava/lang/String;
compileOnly HelloSapporo.main([Ljava/lang/String;)V
compileOnly java.security.Permissions.access$000(Ljava/security/Permissions;)Z
compileOnly java.util.concurrent.ConcurrentHashMap$ValuesView.<init>(Ljava/util/concurrent/ConcurrentHashMap;)V
compileOnly java.io.File$PathStatus.<init>(Ljava/lang/String;I)V
compileOnly jdk.internal.loader.BootLoader.setBootLoaderUnnamedModule0(Ljava/lang/Module;)V
compileOnly java.security.Permissions$1.<init>(Ljava/security/Permissions;Ljava/security/Permission;Z)V
compileOnly java.util.ImmutableCollections$MapN.entrySet()Ljava/util/Set;
compileOnly jdk.internal.reflect.ReflectionFactory$GetReflectionFactoryAction.run()Ljdk/internal/reflect/ReflectionFactory;
compileOnly java.lang.String.checkBoundsOffCount(III)V
compileOnly java.util.Collections$EmptySet.hashCode()I
compileOnly java.security.SecureClassLoader.getProtectionDomain(Ljava/security/CodeSource;)Ljava/security/ProtectionDomain;
compileOnly java.lang.Enum.hashCode()I
compileOnly jdk.internal.module.IllegalAccessLogger$Builder.logAccessToExportedPackages(Ljava/lang/Module;Ljava/util/Set;)Ljdk/internal/module/IllegalAccessLogger$Builder;
compileOnly jdk.internal.module.ModuleLoaderMap.mappingFunction(Ljava/lang/module/Configuration;)Ljava/util/function/Function;
compileOnly java.lang.Object.getClass()Ljava/lang/Class;
compileOnly java.util.List.of()Ljava/util/List;
compileOnly java.lang.ref.ReferenceQueue.<init>()V
compileOnly java.lang.reflect.ReflectPermission.<init>(Ljava/lang/String;)V
compileOnly java.lang.Class.isInterface()Z
compileOnly java.lang.String.valueOf(Ljava/lang/Object;)Ljava/lang/String;
compileOnly java.net.URLStreamHandler.parseURL(Ljava/net/URL;Ljava/lang/String;II)V
compileOnly java.lang.Thread.setContextClassLoader(Ljava/lang/ClassLoader;)V
compileOnly java.util.Objects.toString(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
compileOnly java.io.UnixFileSystem.normalize(Ljava/lang/String;II)Ljava/lang/String;
compileOnly java.util.HashMap.<init>(IF)V
compileOnly java.lang.Module.<clinit>()V
compileOnly java.util.ArrayDeque.removeFirst()Ljava/lang/Object;
compileOnly java.lang.ref.WeakReference.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
compileOnly java.lang.module.ModuleDescriptor$Opens.source()Ljava/lang/String;
compileOnly java.io.FileOutputStream.<clinit>()V
compileOnly java.lang.String$CaseInsensitiveComparator.<init>()V
compileOnly java.io.FileInputStream$AltFinalizer.get(Ljava/io/FileInputStream;)Ljava/io/FileInputStream$AltFinalizer;
compileOnly java.util.ArrayDeque$DeqIterator.hasNext()Z
compileOnly java.lang.ref.Finalizer.access$000()Ljava/lang/ref/ReferenceQueue;
compileOnly jdk.internal.misc.Signal.<init>(Ljava/lang/String;)V
compileOnly java.lang.module.ModuleReference.<init>(Ljava/lang/module/ModuleDescriptor;Ljava/net/URI;)V
compileOnly java.util.ImmutableCollections$List1.hashCode()I
compileOnly java.util.Map.entry(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
compileOnly java.util.Collections.newSetFromMap(Ljava/util/Map;)Ljava/util/Set;
compileOnly jdk.internal.misc.Unsafe.ensureClassInitialized0(Ljava/lang/Class;)V
compileOnly java.util.ArrayDeque.peek()Ljava/lang/Object;
compileOnly java.util.WeakHashMap.size()I
compileOnly java.io.FilePermission.getMask(Ljava/lang/String;)I
compileOnly sun.launcher.LauncherHelper.loadMainClass(ILjava/lang/String;)Ljava/lang/Class;
compileOnly java.lang.module.ModuleDescriptor.isAutomatic()Z
compileOnly java.lang.ThreadGroup.threadTerminated(Ljava/lang/Thread;)V
compileOnly java.util.KeyValueHolder.<init>(Ljava/lang/Object;Ljava/lang/Object;)V
compileOnly java.lang.String.getChars(II[CI)V
compileOnly java.io.PrintStream.<init>(ZLjava/io/OutputStream;)V
compileOnly jdk.internal.misc.Unsafe.getAndAddInt(Ljava/lang/Object;JI)I
compileOnly jdk.internal.misc.Unsafe.unalignedAccess()Z
compileOnly java.nio.charset.spi.CharsetProvider.checkPermission()Ljava/lang/Void;
compileOnly java.io.FileDescriptor$FDCleanup.create(Ljava/io/FileDescriptor;)Ljava/io/FileDescriptor$FDCleanup;
compileOnly java.lang.System.setOut0(Ljava/io/PrintStream;)V
compileOnly sun.nio.cs.UTF_8$Encoder.<init>(Ljava/nio/charset/Charset;Lsun/nio/cs/UTF_8$1;)V
compileOnly java.util.HashSet.isEmpty()Z
compileOnly java.nio.Bits$1.<init>()V
compileOnly java.lang.Module.initExportsAndOpens(Ljava/lang/Module;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;)V
compileOnly java.lang.Class.getName()Ljava/lang/String;
compileOnly java.util.HashMap$Values.<init>(Ljava/util/HashMap;)V
compileOnly sun.net.www.protocol.jrt.Handler.<init>()V
compileOnly java.security.AccessControlContext.<init>([Ljava/security/ProtectionDomain;Z)V
compileOnly java.io.FileInputStream.<init>(Ljava/io/FileDescriptor;)V
compileOnly java.io.BufferedWriter.<init>(Ljava/io/Writer;)V
compileOnly sun.nio.fs.UnixPath.<clinit>()V
compileOnly java.lang.module.ModuleDescriptor$Requires.hashCode()I
compileOnly java.lang.CharacterDataLatin1.getProperties(I)I
compileOnly jdk.internal.module.Builder.exports([Ljava/lang/module/ModuleDescriptor$Exports;)Ljdk/internal/module/Builder;
compileOnly java.io.BufferedWriter.<clinit>()V
compileOnly jdk.internal.module.IllegalAccessLogger.<init>(Ljdk/internal/module/IllegalAccessLogger$Mode;Ljava/io/PrintStream;Ljava/util/Map;Ljava/util/Map;)V
compileOnly sun.nio.fs.UnixPath.getParent()Ljava/nio/file/Path;
compileOnly java.io.ExpiringCache.put(Ljava/lang/String;Ljava/lang/String;)V
compileOnly java.util.concurrent.ConcurrentHashMap.entrySet()Ljava/util/Set;
compileOnly java.lang.Object.clone()Ljava/lang/Object;
compileOnly java.lang.StringLatin1.equals([B[B)Z
compileOnly java.lang.Class$1.<init>(Ljava/lang/Class;Ljava/lang/reflect/Constructor;)V
compileOnly java.lang.Class.getClassLoader0()Ljava/lang/ClassLoader;
compileOnly java.lang.ThreadGroup.<init>()V
compileOnly java.lang.reflect.Modifier.isPublic(I)Z
compileOnly java.util.ImmutableCollections$List1.<init>(Ljava/lang/Object;)V
compileOnly java.util.concurrent.ConcurrentHashMap.sumCount()J
compileOnly java.lang.ClassLoader$ParallelLoaders.register(Ljava/lang/Class;)Z
compileOnly java.util.HashMap.getNode(ILjava/lang/Object;)Ljava/util/HashMap$Node;
compileOnly java.lang.ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;
compileOnly jdk.internal.module.ModuleBootstrap.concat(Ljava/util/Iterator;Ljava/util/Iterator;)Ljava/util/Iterator;
compileOnly java.lang.Thread.getThreadGroup()Ljava/lang/ThreadGroup;
compileOnly java.lang.String.toLowerCase()Ljava/lang/String;
compileOnly java.nio.charset.Charset.lookup(Ljava/lang/String;)Ljava/nio/charset/Charset;
compileOnly java.lang.Class.getComponentType()Ljava/lang/Class;
compileOnly java.util.Collections$1.hasNext()Z
compileOnly java.lang.String.equals(Ljava/lang/Object;)Z
compileOnly java.io.FileInputStream.initIDs()V
compileOnly java.util.concurrent.ConcurrentHashMap.isEmpty()Z
compileOnly java.io.FileInputStream.close()V
compileOnly java.io.OutputStreamWriter.flushBuffer()V
compileOnly sun.nio.fs.UnixFileSystemProvider.getFileSystem(Ljava/net/URI;)Ljava/nio/file/FileSystem;
compileOnly jdk.internal.misc.InnocuousThread$3.<init>(Ljava/lang/ThreadGroup;)V
compileOnly java.util.Collections$EmptyMap.isEmpty()Z
compileOnly java.lang.Class.privateGetDeclaredMethods(Z)[Ljava/lang/reflect/Method;
compileOnly java.io.File.getName()Ljava/lang/String;
compileOnly java.util.ArrayList.iterator()Ljava/util/Iterator;
compileOnly java.util.Properties.entrySet()Ljava/util/Set;
compileOnly java.io.Writer.<init>(Ljava/lang/Object;)V
compileOnly jdk.internal.module.ServicesCatalog.<init>()V
compileOnly java.util.ArrayList.toArray()[Ljava/lang/Object;
compileOnly java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.lang.String.indexOf(Ljava/lang/String;)I
compileOnly jdk.internal.reflect.ReflectionFactory$GetReflectionFactoryAction.run()Ljava/lang/Object;
compileOnly java.util.HashMap$HashIterator.<init>(Ljava/util/HashMap;)V
compileOnly java.lang.ref.Cleaner.create(Ljava/util/concurrent/ThreadFactory;)Ljava/lang/ref/Cleaner;
compileOnly java.util.ArrayDeque.pop()Ljava/lang/Object;
compileOnly java.lang.ClassLoader.loadLibrary0(Ljava/lang/Class;Ljava/io/File;)Z
compileOnly java.lang.module.ModuleDescriptor$1.newOpens(Ljava/util/Set;Ljava/lang/String;Ljava/util/Set;)Ljava/lang/module/ModuleDescriptor$Opens;
compileOnly java.util.AbstractList$Itr.checkForComodification()V
compileOnly java.io.FileInputStream.<clinit>()V
compileOnly java.util.ArrayList$Itr.next()Ljava/lang/Object;
compileOnly java.nio.ByteBuffer.wrap([B)Ljava/nio/ByteBuffer;
compileOnly java.util.Collections$SetFromMap.contains(Ljava/lang/Object;)Z
compileOnly java.util.ImmutableCollections$Set2.<init>(Ljava/lang/Object;Ljava/lang/Object;)V
compileOnly jdk.internal.module.SystemModuleFinders.of(Ljdk/internal/module/SystemModules;)Ljava/lang/module/ModuleFinder;
compileOnly java.io.FileInputStream.<init>(Ljava/io/File;)V
compileOnly sun.nio.cs.US_ASCII.<clinit>()V
compileOnly jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(Ljava/lang/String;)Ljava/lang/Class;
compileOnly sun.launcher.LauncherHelper.getApplicationClass()Ljava/lang/Class;
compileOnly java.util.concurrent.CopyOnWriteArrayList.<init>()V
compileOnly java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;
compileOnly java.security.AccessController.getStackAccessControlContext()Ljava/security/AccessControlContext;
compileOnly java.io.BufferedWriter.ensureOpen()V
compileOnly jdk.internal.misc.Unsafe.objectFieldOffset1(Ljava/lang/Class;Ljava/lang/String;)J
compileOnly java.net.URL.getFile()Ljava/lang/String;
compileOnly java.util.Optional.<init>()V
compileOnly jdk.internal.misc.Unsafe.getIntVolatile(Ljava/lang/Object;J)I
compileOnly java.lang.module.ModuleDescriptor$Provides.service()Ljava/lang/String;
compileOnly jdk.internal.loader.URLClassPath$3.run()Ljdk/internal/loader/URLClassPath$Loader;
compileOnly sun.nio.cs.ISO_8859_1.<init>()V
compileOnly java.lang.ref.Reference$ReferenceHandler.<init>(Ljava/lang/ThreadGroup;Ljava/lang/String;)V
compileOnly java.util.ArrayList.add(Ljava/lang/Object;[Ljava/lang/Object;I)V
compileOnly java.lang.reflect.Constructor.newInstance([Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.lang.Thread.checkAccess()V
compileOnly jdk.internal.module.ModuleHashes.<clinit>()V
compileOnly java.lang.ClassLoader.getClassLoader(Ljava/lang/Class;)Ljava/lang/ClassLoader;
compileOnly java.util.ImmutableCollections$Set0.size()I
compileOnly java.lang.ModuleLayer.defineModules(Ljava/lang/module/Configuration;Ljava/util/List;Ljava/util/function/Function;)Ljava/lang/ModuleLayer$Controller;
compileOnly java.lang.System.setJavaLangAccess()V
compileOnly jdk.internal.misc.VM.awaitInitLevel(I)V
compileOnly java.lang.Math.floorDiv(II)I
compileOnly java.lang.ref.Reference$ReferenceHandler.ensureClassInitialized(Ljava/lang/Class;)V
compileOnly java.lang.Integer.stringSize(I)I
compileOnly sun.launcher.LauncherHelper.doesExtendFXApplication(Ljava/lang/Class;)Z
compileOnly java.net.URI.match(CJJ)Z
compileOnly sun.util.locale.LocaleUtils.caseIgnoreMatch(Ljava/lang/String;Ljava/lang/String;)Z
compileOnly java.util.Collections$EmptyIterator.<init>()V
compileOnly sun.nio.fs.Util.toBytes(Ljava/lang/String;)[B
compileOnly jdk.internal.ref.PhantomCleanable.clear()V
compileOnly java.util.concurrent.CopyOnWriteArrayList.addAll(Ljava/util/Collection;)Z
compileOnly java.net.URI.isAbsolute()Z
compileOnly jdk.internal.misc.VM.maxDirectMemory()J
compileOnly jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance([Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.util.ImmutableCollections$SetN.hashCode()I
compileOnly java.util.concurrent.ConcurrentHashMap$EntryIterator.next()Ljava/lang/Object;
compileOnly java.io.PrintStream.requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
compileOnly java.util.concurrent.ConcurrentHashMap$ValueIterator.next()Ljava/lang/Object;
compileOnly java.lang.String.substring(I)Ljava/lang/String;
compileOnly jdk.internal.reflect.ReflectionFactory.langReflectAccess()Ljdk/internal/reflect/LangReflectAccess;
compileOnly sun.util.locale.BaseLocale$Key.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
compileOnly jdk.internal.module.ModuleBootstrap.getAndRemoveProperty(Ljava/lang/String;)Ljava/lang/String;
compileOnly java.util.WeakHashMap.isEmpty()Z
compileOnly java.lang.ClassLoader.checkCreateClassLoader(Ljava/lang/String;)Ljava/lang/Void;
compileOnly jdk.internal.misc.SharedSecrets.setJavaSecurityAccess(Ljdk/internal/misc/JavaSecurityAccess;)V
compileOnly java.util.concurrent.ConcurrentHashMap.<init>(I)V
compileOnly java.nio.charset.CoderResult.<clinit>()V
compileOnly java.security.SecureClassLoader.check()V
compileOnly java.lang.reflect.Constructor.checkCanSetAccessible(Ljava/lang/Class;)V
compileOnly jdk.internal.module.SystemModules$default.moduleTargets()[Ljdk/internal/module/ModuleTarget;
compileOnly java.io.ObjectStreamField.<init>(Ljava/lang/String;Ljava/lang/Class;Z)V
compileOnly java.lang.AbstractStringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;
compileOnly java.io.FilePermission.<clinit>()V
compileOnly jdk.internal.misc.SharedSecrets.setJavaLangAccess(Ljdk/internal/misc/JavaLangAccess;)V
compileOnly java.nio.Bits.unsafe()Ljdk/internal/misc/Unsafe;
compileOnly java.lang.StringCoding.deref(Ljava/lang/ThreadLocal;)Ljava/lang/Object;
compileOnly java.nio.charset.CharsetEncoder.encode(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
compileOnly java.net.URL.isOverrideable(Ljava/lang/String;)Z
compileOnly java.lang.ref.Reference$ReferenceHandler.<clinit>()V
compileOnly java.net.URI.decode(Ljava/lang/String;)Ljava/lang/String;
compileOnly jdk.internal.loader.URLClassPath.<clinit>()V
compileOnly jdk.internal.reflect.NativeConstructorAccessorImpl.<init>(Ljava/lang/reflect/Constructor;)V
compileOnly java.lang.String.indexOf([BBILjava/lang/String;I)I
compileOnly jdk.internal.loader.ClassLoaders$AppClassLoader.<clinit>()V
compileOnly java.lang.module.ModuleDescriptor$Requires.<init>(Ljava/util/Set;Ljava/lang/String;Ljava/lang/module/ModuleDescriptor$Version;Z)V
compileOnly java.util.Properties.setProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
compileOnly java.lang.Module.isNamed()Z
compileOnly java.lang.Double.doubleToRawLongBits(D)J
compileOnly java.io.FileInputStream.open0(Ljava/lang/String;)V
compileOnly java.util.Locale$Cache.<init>()V
compileOnly java.lang.System.initPhase1()V
compileOnly jdk.internal.misc.Unsafe.compareAndSetInt(Ljava/lang/Object;JII)Z
compileOnly java.util.ArrayDeque.pollFirst()Ljava/lang/Object;
compileOnly java.lang.ThreadLocal$ThreadLocalMap.set(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V
compileOnly java.lang.StringCoding$1.initialValue()Ljava/lang/Object;
compileOnly jdk.internal.loader.URLClassPath$3.<init>(Ljdk/internal/loader/URLClassPath;Ljava/net/URL;)V
compileOnly java.util.HashMap.hash(Ljava/lang/Object;)I
compileOnly sun.nio.cs.StreamEncoder.<clinit>()V
compileOnly jdk.internal.misc.VM.<clinit>()V
compileOnly java.lang.AbstractStringBuilder.putStringAt(ILjava/lang/String;)V
compileOnly java.util.ImmutableCollections$ListN.<init>([Ljava/lang/Object;)V
compileOnly java.io.PrintStream.<init>(Ljava/io/OutputStream;Z)V
compileOnly java.security.AccessControlContext.optimize()Ljava/security/AccessControlContext;
compileOnly java.io.BufferedWriter.newLine()V
compileOnly java.nio.Bits.<clinit>()V
compileOnly java.util.Collections$UnmodifiableSet.<init>(Ljava/util/Set;)V
compileOnly sun.util.locale.BaseLocale.hashCode()I
compileOnly jdk.internal.misc.Unsafe.registerNatives()V
compileOnly java.lang.Boolean.valueOf(Ljava/lang/String;)Ljava/lang/Boolean;
compileOnly java.io.OutputStreamWriter.write([CII)V
compileOnly java.util.HashMap.resize()[Ljava/util/HashMap$Node;
compileOnly java.util.Locale.getDefaultExtensions(Ljava/lang/String;)Ljava/util/Optional;
compileOnly java.util.Objects.requireNonNullElse(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.util.Collections$SynchronizedCollection.<init>(Ljava/util/Collection;Ljava/lang/Object;)V
compileOnly java.util.StringJoiner.toString()Ljava/lang/String;
compileOnly java.io.FileDescriptor.<init>()V
compileOnly sun.nio.fs.LinuxFileSystem.<init>(Lsun/nio/fs/UnixFileSystemProvider;Ljava/lang/String;)V
compileOnly jdk.internal.ref.PhantomCleanable.<init>(Ljava/lang/Object;Ljava/lang/ref/Cleaner;)V
compileOnly java.io.BufferedInputStream.<init>(Ljava/io/InputStream;)V
compileOnly jdk.internal.misc.SharedSecrets.setJavaSecurityProtectionDomainAccess(Ljdk/internal/misc/JavaSecurityProtectionDomainAccess;)V
compileOnly java.util.HashMap$EntryIterator.<init>(Ljava/util/HashMap;)V
compileOnly java.lang.String.indexOf(II)I
compileOnly java.nio.CharBuffer.<init>(IIII[CI)V
compileOnly java.lang.module.ModuleDescriptor.exports()Ljava/util/Set;
compileOnly sun.launcher.LauncherHelper.validateMainClass(Ljava/lang/Class;)V
compileOnly java.nio.charset.CharsetEncoder.onMalformedInput(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
compileOnly java.lang.Class$ReflectionData.<init>(I)V
compileOnly jdk.internal.misc.VM.initLevel()I
compileOnly java.io.UnixFileSystem.prefixLength(Ljava/lang/String;)I
compileOnly java.util.AbstractMap$1$1.next()Ljava/lang/Object;
compileOnly sun.net.www.protocol.file.Handler.<init>()V
compileOnly java.lang.module.ModuleDescriptor$Exports.equals(Ljava/lang/Object;)Z
compileOnly jdk.internal.misc.InnocuousThread$2.run()Ljava/lang/Object;
compileOnly sun.nio.cs.StreamEncoder.ensureOpen()V
compileOnly java.io.PrintStream.print(Ljava/lang/String;)V
compileOnly java.io.UnixFileSystem.normalize(Ljava/lang/String;)Ljava/lang/String;
compileOnly sun.nio.fs.Util.jnuEncoding()Ljava/nio/charset/Charset;
compileOnly java.util.concurrent.ConcurrentHashMap.tableSizeFor(I)I
compileOnly java.util.Optional.get()Ljava/lang/Object;
compileOnly jdk.internal.misc.Signal.handle(Ljdk/internal/misc/Signal;Ljdk/internal/misc/Signal$Handler;)Ljdk/internal/misc/Signal$Handler;
compileOnly java.util.Optional.ofNullable(Ljava/lang/Object;)Ljava/util/Optional;
compileOnly java.net.URI.<init>(Ljava/lang/String;Ljava/lang/String;)V
compileOnly java.io.FilePermissionCollection.<clinit>()V
compileOnly java.io.FileDescriptor.closeAll(Ljava/io/Closeable;)V
compileOnly java.util.concurrent.ConcurrentHashMap$MapEntry.getValue()Ljava/lang/Object;
compileOnly java.security.SecureClassLoader$DebugHolder.access$000()Lsun/security/util/Debug;
compileOnly java.io.FileDescriptor.attach(Ljava/io/Closeable;)V
compileOnly jdk.internal.misc.InnocuousThread.<init>(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/ClassLoader;)V
compileOnly java.util.Set.of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
compileOnly java.net.URLStreamHandler.<init>()V
compileOnly java.lang.ThreadLocal.access$400(Ljava/lang/ThreadLocal;)I
compileOnly java.util.ArrayList.add(Ljava/lang/Object;)Z
compileOnly java.util.Set.of(Ljava/lang/Object;)Ljava/util/Set;
compileOnly java.util.Vector.removeElementAt(I)V
compileOnly java.util.WeakHashMap.maskNull(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.util.Stack.empty()Z
compileOnly jdk.internal.loader.AbstractClassLoaderValue.putIfAbsent(Ljava/lang/ClassLoader;Ljava/lang/Object;)Ljava/lang/Object;
compileOnly jdk.internal.misc.Signal$Handler.<clinit>()V
compileOnly java.util.WeakHashMap$KeySet.<init>(Ljava/util/WeakHashMap;)V
compileOnly java.io.OutputStreamWriter.<init>(Ljava/io/OutputStream;)V
compileOnly java.lang.reflect.Executable.<init>()V
compileOnly sun.nio.fs.UnixPath.isAbsolute()Z
compileOnly java.lang.StringLatin1.toChars([B)[C
compileOnly jdk.internal.misc.SharedSecrets.setJavaNioAccess(Ljdk/internal/misc/JavaNioAccess;)V
compileOnly java.nio.CharBuffer.wrap([CII)Ljava/nio/CharBuffer;
compileOnly java.io.FileOutputStream.write([BII)V
compileOnly jdk.internal.ref.CleanerFactory.<clinit>()V
compileOnly java.util.Set.of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
compileOnly java.util.AbstractCollection.addAll(Ljava/util/Collection;)Z
compileOnly java.io.FileSystem.<init>()V
compileOnly jdk.internal.module.ModuleTarget.<init>(Ljava/lang/String;)V
compileOnly java.util.concurrent.ConcurrentHashMap$EntryIterator.<init>([Ljava/util/concurrent/ConcurrentHashMap$Node;IIILjava/util/concurrent/ConcurrentHashMap;)V
compileOnly java.lang.System.setIn0(Ljava/io/InputStream;)V
compileOnly java.util.concurrent.ConcurrentHashMap$ValueIterator.<init>([Ljava/util/concurrent/ConcurrentHashMap$Node;IIILjava/util/concurrent/ConcurrentHashMap;)V
compileOnly java.lang.String.<clinit>()V
compileOnly jdk.internal.loader.BuiltinClassLoader$LoadedModule.loader()Ljdk/internal/loader/BuiltinClassLoader;
compileOnly java.lang.ref.Reference.waitForReferencePendingList()V
compileOnly sun.util.locale.LocaleUtils.isEmpty(Ljava/util/Set;)Z
compileOnly jdk.internal.loader.AbstractClassLoaderValue.<init>()V
compileOnly sun.util.locale.LocaleUtils.isEmpty(Ljava/util/Map;)Z
compileOnly java.util.concurrent.ConcurrentHashMap.transfer([Ljava/util/concurrent/ConcurrentHashMap$Node;[Ljava/util/concurrent/ConcurrentHashMap$Node;)V
compileOnly sun.nio.cs.StandardCharsets.lookup(Ljava/lang/String;)Ljava/nio/charset/Charset;
compileOnly java.lang.String.charAt(I)C
compileOnly java.lang.System$2.defineModule(Ljava/lang/ClassLoader;Ljava/lang/module/ModuleDescriptor;Ljava/net/URI;)Ljava/lang/Module;
compileOnly java.util.Collections.emptyIterator()Ljava/util/Iterator;
compileOnly java.nio.charset.CharsetEncoder.implReset()V
compileOnly java.util.WeakHashMap.getTable()[Ljava/util/WeakHashMap$Entry;
compileOnly java.lang.ref.SoftReference.<init>(Ljava/lang/Object;)V
compileOnly java.util.KeyValueHolder.getKey()Ljava/lang/Object;
compileOnly sun.nio.fs.LinuxFileSystemProvider.newFileSystem(Ljava/lang/String;)Lsun/nio/fs/UnixFileSystem;
compileOnly java.lang.String.toCharArray()[C
compileOnly java.util.ImmutableCollections$Set2.iterator()Ljava/util/Iterator;
compileOnly sun.util.locale.LocaleObjectCache$CacheEntry.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
compileOnly java.lang.module.ModuleDescriptor$Exports.source()Ljava/lang/String;
compileOnly java.util.ImmutableCollections$Set2$1.<init>(Ljava/util/ImmutableCollections$Set2;)V
compileOnly java.lang.System.newPrintStream(Ljava/io/FileOutputStream;Ljava/lang/String;)Ljava/io/PrintStream;
compileOnly java.net.URL.toString()Ljava/lang/String;
compileOnly java.util.concurrent.CopyOnWriteArrayList.getArray()[Ljava/lang/Object;
compileOnly java.nio.ByteOrder.<clinit>()V
compileOnly java.lang.ref.Reference.reachabilityFence(Ljava/lang/Object;)V
compileOnly java.security.SecureClassLoader.<clinit>()V
compileOnly java.util.HashMap$ValueIterator.next()Ljava/lang/Object;
compileOnly java.security.ProtectionDomain$JavaSecurityAccessImpl.<init>(Ljava/security/ProtectionDomain$1;)V
compileOnly sun.nio.cs.StreamEncoder.<init>(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;)V
compileOnly java.lang.module.ModuleReference.location()Ljava/util/Optional;
compileOnly java.io.File$PathStatus.<clinit>()V
compileOnly java.util.Collections.emptyList()Ljava/util/List;
compileOnly java.lang.Runtime.loadLibrary0(Ljava/lang/Class;Ljava/lang/String;)V
compileOnly java.lang.System$2.createOrGetClassLoaderValueMap(Ljava/lang/ClassLoader;)Ljava/util/concurrent/ConcurrentHashMap;
compileOnly jdk.internal.module.SystemModules$default.moduleDescriptors()[Ljava/lang/module/ModuleDescriptor;
compileOnly java.util.ImmutableCollections$List0.size()I
compileOnly java.security.BasicPermission.getCanonicalName()Ljava/lang/String;
compileOnly jdk.internal.module.ModuleLoaderMap$Mapper.apply(Ljava/lang/String;)Ljava/lang/ClassLoader;
compileOnly java.lang.ref.Reference.clear()V
compileOnly java.util.LinkedHashMap$Entry.<init>(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V
compileOnly jdk.internal.loader.BuiltinClassLoader.getPermissions(Ljava/security/CodeSource;)Ljava/security/PermissionCollection;
compileOnly java.nio.charset.CoderResult.isUnderflow()Z
compileOnly java.lang.String.substring(II)Ljava/lang/String;
compileOnly java.lang.invoke.MethodHandleNatives.registerNatives()V
compileOnly java.util.Locale$Cache.createObject(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly jdk.internal.loader.URLClassPath$FileLoader.getResource(Ljava/lang/String;Z)Ljdk/internal/loader/Resource;
compileOnly java.util.HashMap$KeySet.<init>(Ljava/util/HashMap;)V
compileOnly java.lang.Class.isArray()Z
compileOnly java.util.concurrent.ConcurrentHashMap$MapEntry.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap;)V
compileOnly jdk.internal.ref.CleanerFactory$1$1.run()Ljava/lang/Object;
compileOnly jdk.internal.misc.Signal.handle0(IJ)J
compileOnly sun.util.locale.BaseLocale$Key.hashCode()I
compileOnly jdk.internal.misc.Unsafe.ensureClassInitialized(Ljava/lang/Class;)V
compileOnly java.lang.Runtime.maxMemory()J
compileOnly jdk.internal.module.Builder.newOpens(Ljava/util/Set;Ljava/lang/String;Ljava/util/Set;)Ljava/lang/module/ModuleDescriptor$Opens;
compileOnly jdk.internal.module.SystemModules$default.<init>()V
compileOnly jdk.internal.misc.Unsafe.weakCompareAndSetInt(Ljava/lang/Object;JII)Z
compileOnly java.util.Hashtable.<init>()V
compileOnly jdk.internal.module.SystemModuleFinders.generateNameToHash([Ljdk/internal/module/ModuleHashes;)Ljava/util/Map;
compileOnly java.nio.Buffer.clear()Ljava/nio/Buffer;
compileOnly java.net.URI$Parser.checkChar(IJJLjava/lang/String;)V
compileOnly java.io.FileInputStream.readBytes([BII)I
compileOnly java.util.ArrayList.size()I
compileOnly sun.nio.cs.StandardCharsets.<init>()V
compileOnly sun.nio.fs.UnixPath.normalize()Lsun/nio/fs/UnixPath;
compileOnly java.net.URL.openConnection()Ljava/net/URLConnection;
compileOnly java.lang.ThreadLocal$ThreadLocalMap.setThreshold(I)V
compileOnly java.lang.StringCoding.decodeUTF8([BIIZ)Ljava/lang/StringCoding$Result;
compileOnly java.io.OutputStream.flush()V
compileOnly java.net.URI$Parser.<init>(Ljava/net/URI;Ljava/lang/String;)V
compileOnly java.io.UnixFileSystem.getBooleanAttributes(Ljava/io/File;)I
compileOnly java.lang.ThreadLocal.setInitialValue()Ljava/lang/Object;
compileOnly java.util.concurrent.ConcurrentHashMap$Node.<init>(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V
compileOnly java.lang.reflect.AccessibleObject.checkPermission()V
compileOnly java.lang.ClassLoader.checkName(Ljava/lang/String;)Z
compileOnly java.net.URL.getHost()Ljava/lang/String;
compileOnly java.io.FileSystem.getBooleanProperty(Ljava/lang/String;Z)Z
compileOnly java.nio.ByteBuffer.clear()Ljava/nio/ByteBuffer;
compileOnly jdk.internal.misc.Signal$NativeHandler.<init>(J)V
compileOnly java.util.Set.of()Ljava/util/Set;
compileOnly java.nio.charset.CoderResult$Cache.<init>(Ljava/nio/charset/CoderResult$1;)V
compileOnly sun.net.www.MessageHeader.grow()V
compileOnly java.util.HashMap.size()I
compileOnly java.util.Arrays.<clinit>()V
compileOnly java.util.WeakHashMap.indexFor(II)I
compileOnly java.lang.System.setErr0(Ljava/io/PrintStream;)V
compileOnly java.util.AbstractMap$1.iterator()Ljava/util/Iterator;
compileOnly java.util.concurrent.CopyOnWriteArrayList.setArray([Ljava/lang/Object;)V
compileOnly sun.launcher.LauncherHelper.makePlatformString(Z[B)Ljava/lang/String;
compileOnly java.lang.Thread.init(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V
compileOnly java.util.concurrent.ConcurrentHashMap$BaseIterator.<init>([Ljava/util/concurrent/ConcurrentHashMap$Node;IIILjava/util/concurrent/ConcurrentHashMap;)V
compileOnly java.io.FileDescriptor$FDCleanup.<init>(Ljava/lang/Object;Ljava/lang/ref/Cleaner;I)V
compileOnly java.util.concurrent.ConcurrentHashMap.initTable()[Ljava/util/concurrent/ConcurrentHashMap$Node;
compileOnly java.util.concurrent.ConcurrentHashMap.merge(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
compileOnly jdk.internal.ref.CleanerImpl.run()V
compileOnly java.util.ImmutableCollections$MapN$1$1.next()Ljava/lang/Object;
compileOnly java.net.URI.<init>(Ljava/lang/String;)V
compileOnly java.nio.charset.CharsetEncoder.<init>(Ljava/nio/charset/Charset;FF)V
compileOnly java.util.ImmutableCollections$Set0.hashCode()I
compileOnly jdk.internal.module.ServicesCatalog$ServiceProvider.<init>(Ljdk/internal/module/ServicesCatalog;Ljava/lang/Module;Ljava/lang/String;)V
compileOnly jdk.internal.loader.BuiltinClassLoader.defineClass(Ljava/lang/String;Ljdk/internal/loader/Resource;)Ljava/lang/Class;
compileOnly java.io.UnixFileSystem.parentOrNull(Ljava/lang/String;)Ljava/lang/String;
compileOnly jdk.internal.misc.InnocuousThread$2.run()Ljava/lang/Thread;
compileOnly java.util.concurrent.ConcurrentHashMap.casTabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z
compileOnly java.util.HashMap$Node.<init>(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V
compileOnly java.nio.file.FileSystem.<init>()V
compileOnly sun.nio.fs.UnixNativeDispatcher.getcwd()[B
compileOnly java.util.HashMap$TreeNode.getTreeNode(ILjava/lang/Object;)Ljava/util/HashMap$TreeNode;
compileOnly java.io.FileDescriptor$1.<init>()V
compileOnly java.nio.charset.CharsetEncoder.implOnMalformedInput(Ljava/nio/charset/CodingErrorAction;)V
compileOnly java.nio.charset.CharsetEncoder.implFlush(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
compileOnly java.util.HashMap.afterNodeInsertion(Z)V
compileOnly java.lang.String.intern()Ljava/lang/String;
compileOnly java.lang.ClassLoader.<init>(Ljava/lang/String;Ljava/lang/ClassLoader;)V
compileOnly sun.nio.cs.UTF_8$Encoder.<init>(Ljava/nio/charset/Charset;)V
compileOnly java.util.HashSet.<init>(Ljava/util/Collection;)V
compileOnly jdk.internal.loader.Resource.cachedInputStream()Ljava/io/InputStream;
compileOnly java.io.FileDescriptor.<init>(I)V
compileOnly jdk.internal.misc.Unsafe.<init>()V
compileOnly java.lang.ModuleLayer.modules()Ljava/util/Set;
compileOnly jdk.internal.loader.URLClassPath$3.run()Ljava/lang/Object;
compileOnly jdk.internal.ref.CleanerImpl$WeakCleanableRef.<init>()V
compileOnly java.net.URI$Parser.scan(IIJJ)I
compileOnly jdk.internal.module.ModuleHashes$Builder.build()Ljdk/internal/module/ModuleHashes;
compileOnly java.util.HashMap.treeifyBin([Ljava/util/HashMap$Node;I)V
compileOnly java.util.ImmutableCollections$AbstractImmutableList.<init>()V
compileOnly java.lang.module.Configuration.empty()Ljava/lang/module/Configuration;
compileOnly java.lang.Void.<clinit>()V
compileOnly jdk.internal.misc.InnocuousThread.run()V
compileOnly java.util.ImmutableCollections$ListN.get(I)Ljava/lang/Object;
compileOnly jdk.internal.misc.InnocuousThread$3.run()Ljava/lang/ThreadGroup;
compileOnly jdk.internal.loader.BuiltinClassLoader.findLoadedModule(Ljava/lang/String;)Ljdk/internal/loader/BuiltinClassLoader$LoadedModule;
compileOnly java.util.concurrent.atomic.AtomicLong.<init>()V
compileOnly java.security.PermissionCollection.<init>()V
compileOnly java.util.Locale.initDefault()Ljava/util/Locale;
compileOnly java.util.concurrent.ConcurrentHashMap.values()Ljava/util/Collection;
compileOnly java.util.AbstractMap.isEmpty()Z
compileOnly java.lang.StringLatin1.hashCode([B)I
compileOnly java.net.URI$Parser.scan(IILjava/lang/String;Ljava/lang/String;)I
compileOnly java.lang.ClassLoader.findBootstrapClassOrNull(Ljava/lang/String;)Ljava/lang/Class;
compileOnly java.lang.ThreadGroup.add(Ljava/lang/Thread;)V
compileOnly java.util.ImmutableCollections$SetN$1.hasNext()Z
compileOnly jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(Ljava/lang/String;Z)Ljava/lang/Class;
compileOnly sun.nio.cs.StandardCharsets.init()V
compileOnly java.util.ImmutableCollections$Set1.contains(Ljava/lang/Object;)Z
compileOnly java.lang.reflect.Constructor.setConstructorAccessor(Ljdk/internal/reflect/ConstructorAccessor;)V
compileOnly java.nio.Bits.byteOrder()Ljava/nio/ByteOrder;
compileOnly java.nio.charset.Charset.defaultCharset()Ljava/nio/charset/Charset;
compileOnly jdk.internal.module.ModuleBootstrap$2.<init>(Ljava/util/Iterator;Ljava/util/Iterator;)V
compileOnly java.nio.file.spi.FileSystemProvider.<init>()V
compileOnly java.lang.AbstractStringBuilder.append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;
compileOnly java.lang.StringCoding$Result.<init>()V
compileOnly java.nio.charset.Charset.<init>(Ljava/lang/String;[Ljava/lang/String;)V
compileOnly java.lang.ClassLoader$ParallelLoaders.isRegistered(Ljava/lang/Class;)Z
compileOnly jdk.internal.misc.SharedSecrets.getJavaLangModuleAccess()Ljdk/internal/misc/JavaLangModuleAccess;
compileOnly java.lang.module.ModuleDescriptor$1.<init>()V
compileOnly java.net.URI.getPath()Ljava/lang/String;
compileOnly java.lang.reflect.Constructor.getSharedParameterTypes()[Ljava/lang/Class;
compileOnly java.lang.Math.floorMod(II)I
compileOnly java.lang.Class.registerNatives()V
compileOnly java.lang.System.mapLibraryName(Ljava/lang/String;)Ljava/lang/String;
compileOnly java.lang.module.ResolvedModule.reference()Ljava/lang/module/ModuleReference;
compileOnly java.util.Locale.getDefault()Ljava/util/Locale;
compileOnly java.util.HashMap.newNode(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;
compileOnly java.lang.RuntimePermission.<init>(Ljava/lang/String;)V
compileOnly sun.nio.fs.UnixFileSystemProvider.<init>()V
compileOnly jdk.internal.misc.InnocuousThread.eraseThreadLocals()V
compileOnly java.util.ImmutableCollections$Set2$1.next()Ljava/lang/Object;
compileOnly java.util.Stack.<init>()V
compileOnly java.io.File.getPrefixLength()I
compileOnly jdk.internal.misc.Unsafe.isBigEndian0()Z
compileOnly java.util.Vector.<init>()V
compileOnly java.util.Set.of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
compileOnly java.io.UnixFileSystem.isAbsolute(Ljava/io/File;)Z
compileOnly java.lang.ClassLoader.defineClass1(Ljava/lang/ClassLoader;Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class;
compileOnly sun.nio.fs.UnixFileSystem.<init>(Lsun/nio/fs/UnixFileSystemProvider;Ljava/lang/String;)V
compileOnly java.nio.charset.CoderResult$2.<init>()V
compileOnly java.util.Collections.emptyMap()Ljava/util/Map;
compileOnly java.lang.StringLatin1.indexOf([BII)I
compileOnly java.security.Permissions$1.apply(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.io.UnixFileSystem.<init>()V
compileOnly java.nio.HeapByteBuffer.<init>(II)V
compileOnly jdk.internal.loader.BuiltinClassLoader.loadModule(Ljava/lang/module/ModuleReference;)V
compileOnly java.net.URI.<clinit>()V
compileOnly java.security.ProtectionDomain.<clinit>()V
compileOnly java.security.CodeSource.getLocation()Ljava/net/URL;
compileOnly java.lang.Runtime.<clinit>()V
compileOnly java.util.ArrayList.isEmpty()Z
compileOnly java.net.URI.getRawFragment()Ljava/lang/String;
compileOnly java.util.concurrent.ConcurrentHashMap.fullAddCount(JZ)V
compileOnly java.util.HashMap.entrySet()Ljava/util/Set;
compileOnly java.security.AccessController.getInheritedAccessControlContext()Ljava/security/AccessControlContext;
compileOnly java.util.Properties.getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
compileOnly jdk.internal.ref.CleanerFactory$1$1.run()Ljava/lang/Thread;
compileOnly java.util.HashSet.<init>()V
compileOnly java.lang.module.ModuleDescriptor.provides()Ljava/util/Set;
compileOnly java.util.WeakHashMap.newTable(I)[Ljava/util/WeakHashMap$Entry;
compileOnly jdk.internal.module.IllegalAccessLogger.access$002(Ljdk/internal/module/IllegalAccessLogger;)Ljdk/internal/module/IllegalAccessLogger;
compileOnly jdk.internal.module.IllegalAccessLogger$Builder.ensureNotComplete()V
compileOnly java.lang.Character.toUpperCase(C)C
compileOnly java.util.HashMap.isEmpty()Z
compileOnly jdk.internal.misc.SharedSecrets.getJavaNetUriAccess()Ljdk/internal/misc/JavaNetUriAccess;
compileOnly jdk.internal.util.Preconditions.checkIndex(IILjava/util/function/BiFunction;)I
compileOnly java.lang.invoke.MethodHandleNatives.<clinit>()V
compileOnly java.util.Set.of(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
compileOnly java.util.ImmutableCollections$SetN$1.<init>(Ljava/util/ImmutableCollections$SetN;)V
compileOnly java.util.WeakHashMap.getEntry(Ljava/lang/Object;)Ljava/util/WeakHashMap$Entry;
compileOnly java.util.Locale$LocaleKey.hashCode()I
compileOnly java.lang.System.setProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
compileOnly java.io.BufferedWriter.<init>(Ljava/io/Writer;I)V
compileOnly java.lang.AbstractStringBuilder.<init>(I)V
compileOnly sun.util.locale.InternalLocaleBuilder.<init>()V
compileOnly java.util.ImmutableCollections$List2.<init>(Ljava/lang/Object;Ljava/lang/Object;)V
compileOnly java.net.URL.fromURI(Ljava/net/URI;)Ljava/net/URL;
compileOnly java.lang.Thread.run()V
compileOnly sun.net.util.URLUtil.urlNoFragString(Ljava/net/URL;)Ljava/lang/String;
compileOnly sun.net.www.protocol.file.FileURLConnection.<clinit>()V
compileOnly java.util.Vector.<init>(II)V
compileOnly java.util.concurrent.ConcurrentHashMap.<init>()V
compileOnly jdk.internal.module.ServicesCatalog.register(Ljava/lang/Module;)V
compileOnly java.security.SecureClassLoader.getPermissions(Ljava/security/CodeSource;)Ljava/security/PermissionCollection;
compileOnly java.lang.ClassLoader.createOrGetClassLoaderValueMap()Ljava/util/concurrent/ConcurrentHashMap;
compileOnly java.lang.module.ModuleDescriptor.opens()Ljava/util/Set;
compileOnly sun.nio.fs.UnixFileSystem.getPath(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
compileOnly sun.util.locale.LocaleUtils.isUpper(C)Z
compileOnly java.lang.String.valueOf(Z)Ljava/lang/String;
compileOnly jdk.internal.loader.URLClassPath.<init>(Ljava/lang/String;Z)V
compileOnly java.lang.ClassLoader.preDefineClass(Ljava/lang/String;Ljava/security/ProtectionDomain;)Ljava/security/ProtectionDomain;
compileOnly java.nio.charset.CharsetEncoder.maxBytesPerChar()F
compileOnly java.security.SecureClassLoader$1.<init>(Ljava/security/SecureClassLoader;Ljava/security/CodeSource;)V
compileOnly java.nio.ByteBuffer.allocate(I)Ljava/nio/ByteBuffer;
compileOnly java.util.StringJoiner.add(Ljava/lang/CharSequence;)Ljava/util/StringJoiner;
compileOnly sun.nio.fs.UnixPath.getParent()Lsun/nio/fs/UnixPath;
compileOnly java.lang.ThreadGroup.<init>(Ljava/lang/ThreadGroup;Ljava/lang/String;)V
compileOnly java.lang.Module.defineModule0(Ljava/lang/Module;ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
compileOnly java.util.concurrent.ConcurrentHashMap.helpTransfer([Ljava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)[Ljava/util/concurrent/ConcurrentHashMap$Node;
compileOnly java.nio.ByteBuffer.limit(I)Ljava/nio/Buffer;
compileOnly java.lang.ref.ReferenceQueue.<clinit>()V
compileOnly jdk.internal.module.SystemModuleFinders$SystemModuleFinder.find(Ljava/lang/String;)Ljava/util/Optional;
compileOnly jdk.internal.misc.OSEnvironment.initialize()V
compileOnly jdk.internal.module.IllegalAccessLogger$Mode.<clinit>()V
compileOnly java.nio.charset.spi.CharsetProvider.<init>(Ljava/lang/Void;)V
compileOnly jdk.internal.loader.URLClassPath$Loader.getClassPath()[Ljava/net/URL;
compileOnly java.lang.reflect.Method.<init>(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;[Ljava/lang/Class;IILjava/lang/String;[B[B[B)V
compileOnly java.util.Hashtable.<init>(I)V
compileOnly java.lang.ClassLoader.systemNativeLibraries()Ljava/util/Map;
compileOnly java.lang.ClassLoader$NativeLibrary.load()Z
compileOnly java.lang.String.<init>([BIILjava/lang/String;)V
compileOnly sun.net.www.protocol.file.Handler.createFileURLConnection(Ljava/net/URL;Ljava/io/File;)Ljava/net/URLConnection;
compileOnly jdk.internal.ref.Cleaner.<clinit>()V
compileOnly java.net.URI.getRawPath()Ljava/lang/String;
compileOnly java.security.ProtectionDomain.getCodeSource()Ljava/security/CodeSource;
compileOnly java.lang.Terminator.setup()V
compileOnly jdk.internal.module.SystemModuleFinders.<clinit>()V
compileOnly java.lang.ref.Reference.access$000()V
compileOnly sun.net.www.ParseUtil.encodePath(Ljava/lang/String;Z)Ljava/lang/String;
compileOnly java.util.concurrent.atomic.AtomicInteger.<init>(I)V
compileOnly java.net.URI.access$002(Ljava/net/URI;Ljava/lang/String;)Ljava/lang/String;
compileOnly java.nio.charset.Charset.lookup2(Ljava/lang/String;)Ljava/nio/charset/Charset;
compileOnly java.lang.Integer.valueOf(I)Ljava/lang/Integer;
compileOnly java.lang.Terminator.<clinit>()V
compileOnly sun.nio.fs.UnixFileSystemProvider.getScheme()Ljava/lang/String;
compileOnly java.util.concurrent.ConcurrentHashMap.tabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;
compileOnly jdk.internal.misc.VM.initialize()V
compileOnly java.lang.StringCoding$1.initialValue()Ljava/lang/StringCoding$Result;
compileOnly java.security.PermissionCollection.isReadOnly()Z
compileOnly java.lang.StringLatin1.inflate([BI[CII)V
compileOnly java.lang.Class.reflectionData()Ljava/lang/Class$ReflectionData;
compileOnly java.util.ArrayDeque.inc(II)I
compileOnly java.lang.invoke.MemberName.<clinit>()V
compileOnly java.util.concurrent.ConcurrentHashMap$CollectionView.<init>(Ljava/util/concurrent/ConcurrentHashMap;)V
compileOnly java.util.concurrent.ConcurrentHashMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.util.Locale.getInstance(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lsun/util/locale/LocaleExtensions;)Ljava/util/Locale;
compileOnly java.util.ImmutableCollections$Set2.size()I
compileOnly java.util.ImmutableCollections$MapN.containsKey(Ljava/lang/Object;)Z
compileOnly jdk.internal.module.IllegalAccessLogger$Builder.logAccessToConcealedPackages(Ljava/lang/Module;Ljava/util/Set;)Ljdk/internal/module/IllegalAccessLogger$Builder;
compileOnly jdk.internal.module.SystemModulesMap.defaultSystemModules()Ljdk/internal/module/SystemModules;
compileOnly java.lang.String.indexOf(I)I
compileOnly java.lang.reflect.Constructor.getModifiers()I
compileOnly java.security.AccessController.doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
compileOnly jdk.internal.reflect.ReflectionFactory.inflationThreshold()I
compileOnly sun.nio.fs.AbstractFileSystemProvider.<init>()V
compileOnly sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar.<init>(C)V
compileOnly jdk.internal.module.IllegalAccessLogger$Builder.complete()V
compileOnly java.util.LinkedHashMap.afterNodeInsertion(Z)V
compileOnly java.lang.Shutdown.<clinit>()V
compileOnly java.lang.String.regionMatches(ZILjava/lang/String;II)Z
compileOnly java.lang.StringBuilder.append(I)Ljava/lang/StringBuilder;
compileOnly java.nio.ByteBuffer.arrayOffset()I
compileOnly java.util.WeakHashMap.<init>()V
compileOnly java.lang.ref.ReferenceQueue.remove()Ljava/lang/ref/Reference;
compileOnly java.util.ArrayDeque.iterator()Ljava/util/Iterator;
compileOnly jdk.internal.module.ServicesCatalog.<clinit>()V
compileOnly java.lang.StringBuilder.append(C)Ljava/lang/StringBuilder;
compileOnly java.util.Collections$UnmodifiableMap.<init>(Ljava/util/Map;)V
compileOnly java.util.ImmutableCollections$List2.get(I)Ljava/lang/Object;
compileOnly java.security.BasicPermission.newPermissionCollection()Ljava/security/PermissionCollection;
compileOnly sun.net.www.MessageHeader.<init>()V
compileOnly jdk.internal.loader.URLClassPath.getResource(Ljava/lang/String;Z)Ljdk/internal/loader/Resource;
compileOnly java.lang.Math.powerOfTwoD(I)D
compileOnly java.lang.Class.newReflectionData(Ljava/lang/ref/SoftReference;I)Ljava/lang/Class$ReflectionData;
compileOnly java.lang.ClassLoader$2.run()Ljava/lang/Object;
compileOnly java.util.concurrent.ConcurrentHashMap$ReservationNode.<init>()V
compileOnly jdk.internal.misc.Signal.findSignal0(Ljava/lang/String;)I
compileOnly java.nio.ByteBuffer.position(I)Ljava/nio/Buffer;
compileOnly java.lang.module.ModuleDescriptor$Provides.<init>(Ljava/lang/String;Ljava/util/List;Z)V
compileOnly java.util.ArrayList$Itr.checkForComodification()V
compileOnly java.lang.String.replace(CC)Ljava/lang/String;
compileOnly java.io.FileDescriptor.close0()V
compileOnly jdk.internal.loader.BuiltinClassLoader$LoadedModule.<init>(Ljdk/internal/loader/BuiltinClassLoader;Ljava/lang/module/ModuleReference;)V
compileOnly java.util.Optional.isPresent()Z
compileOnly java.lang.StringLatin1.toLowerCase(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;
compileOnly java.util.HashMap$EntrySet.<init>(Ljava/util/HashMap;)V
compileOnly jdk.internal.module.ModuleHashes$Builder.<init>(Ljava/lang/String;I)V
compileOnly jdk.internal.module.ModuleBootstrap$Counters.add(Ljava/lang/String;J)V
compileOnly java.io.ExpiringCache$Entry.<init>(JLjava/lang/String;)V
compileOnly java.util.Locale$Cache.createObject(Ljava/util/Locale$LocaleKey;)Ljava/util/Locale;
compileOnly java.util.HashMap$Node.getValue()Ljava/lang/Object;
compileOnly java.lang.ModuleLayer$Controller.<init>(Ljava/lang/ModuleLayer;)V
compileOnly java.lang.Thread.nextThreadID()J
compileOnly java.lang.System.initProperties(Ljava/util/Properties;)Ljava/util/Properties;
compileOnly java.util.Set.of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
compileOnly jdk.internal.loader.BuiltinClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class;
compileOnly java.util.Optional.<clinit>()V
compileOnly java.lang.Thread.<init>(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;JZ)V
compileOnly jdk.internal.loader.Resource.getCodeSigners()[Ljava/security/CodeSigner;
compileOnly sun.nio.cs.ISO_8859_1.<clinit>()V
compileOnly java.lang.Module.<init>(Ljava/lang/ModuleLayer;Ljava/lang/ClassLoader;Ljava/lang/module/ModuleDescriptor;Ljava/net/URI;)V
compileOnly java.lang.Module.implAddOpensToAllUnnamed(Ljava/util/Iterator;)V
compileOnly jdk.internal.loader.BootLoader.<clinit>()V
compileOnly java.io.BufferedWriter.min(II)I
compileOnly java.nio.charset.Charset.isSupported(Ljava/lang/String;)Z
compileOnly java.lang.StringCoding.encodeUTF8(B[BZ)[B
compileOnly java.util.concurrent.ConcurrentHashMap.containsKey(Ljava/lang/Object;)Z
compileOnly java.util.LinkedHashMap.newNode(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;
compileOnly java.lang.reflect.AccessibleObject.checkCanSetAccessible(Ljava/lang/Class;Ljava/lang/Class;)V
compileOnly jdk.internal.module.ModuleReferenceImpl.<init>(Ljava/lang/module/ModuleDescriptor;Ljava/net/URI;Ljava/util/function/Supplier;Ljdk/internal/module/ModulePatcher;Ljdk/internal/module/ModuleTarget;Ljdk/internal/module/ModuleHashes;Ljdk/internal/module/ModuleHashes$HashSupplier;Ljdk/internal/module/ModuleResolution;)V
compileOnly java.lang.Integer.<clinit>()V
compileOnly jdk.internal.misc.VM.isBooted()Z
compileOnly sun.util.locale.LocaleObjectCache.<init>()V
compileOnly java.lang.reflect.AccessibleObject.<init>()V
compileOnly java.util.Vector.<init>(I)V
compileOnly java.io.FileInputStream.read([BII)I
compileOnly sun.nio.fs.UnixPath.getFileName()Ljava/nio/file/Path;
compileOnly sun.util.locale.BaseLocale$Key.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
compileOnly java.lang.Class.getDeclaredMethods0(Z)[Ljava/lang/reflect/Method;
compileOnly java.nio.charset.Charset.<clinit>()V
compileOnly java.security.AccessControlContext.<init>([Ljava/security/ProtectionDomain;)V
compileOnly java.lang.ref.ReferenceQueue.poll()Ljava/lang/ref/Reference;
compileOnly java.lang.Boolean.parseBoolean(Ljava/lang/String;)Z
compileOnly jdk.internal.misc.Signal.<clinit>()V
compileOnly java.lang.System.checkKey(Ljava/lang/String;)V
compileOnly java.lang.Character.<clinit>()V
compileOnly java.util.ImmutableCollections$MapN$1.<init>(Ljava/util/ImmutableCollections$MapN;)V
compileOnly java.nio.charset.CodingErrorAction.<init>(Ljava/lang/String;)V
compileOnly java.lang.module.ModuleDescriptor.<init>(Ljava/lang/String;Ljava/lang/module/ModuleDescriptor$Version;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;IZ)V
compileOnly java.lang.CharacterData.<init>()V
compileOnly java.lang.Object.wait(J)V
compileOnly java.util.Collections$EmptyIterator.<clinit>()V
compileOnly java.lang.ref.Reference.<clinit>()V
compileOnly java.util.AbstractList.iterator()Ljava/util/Iterator;
compileOnly sun.nio.cs.UTF_8.<init>()V
compileOnly java.util.WeakHashMap.keySet()Ljava/util/Set;
compileOnly java.util.HashMap.<init>(Ljava/util/Map;)V
compileOnly java.io.File.isDirectory()Z
compileOnly java.lang.ClassLoader.defineClassSourceLocation(Ljava/security/ProtectionDomain;)Ljava/lang/String;
compileOnly java.lang.module.ModuleDescriptor$Requires.equals(Ljava/lang/Object;)Z
compileOnly jdk.internal.module.ModuleBootstrap$2.next()Ljava/lang/Object;
compileOnly java.lang.module.ModuleDescriptor$1.newOpens(Ljava/util/Set;Ljava/lang/String;)Ljava/lang/module/ModuleDescriptor$Opens;
compileOnly java.lang.reflect.Modifier.<clinit>()V
compileOnly java.util.HashMap.tableSizeFor(I)I
compileOnly java.lang.String.<init>([BB)V
compileOnly jdk.internal.module.SystemModules$default.concealedPackagesToOpen()Ljava/util/Map;
compileOnly java.net.URLConnection.<clinit>()V
compileOnly jdk.internal.module.SystemModuleFinders.toModuleReference(Ljava/lang/module/ModuleDescriptor;Ljdk/internal/module/ModuleTarget;Ljdk/internal/module/ModuleHashes;Ljdk/internal/module/ModuleHashes$HashSupplier;Ljdk/internal/module/ModuleResolution;)Ljava/lang/module/ModuleReference;
compileOnly java.net.URL.getAuthority()Ljava/lang/String;
compileOnly java.lang.reflect.Method.getSharedParameterTypes()[Ljava/lang/Class;
compileOnly java.lang.String$CaseInsensitiveComparator.<init>(Ljava/lang/String$1;)V
compileOnly java.util.Objects.checkIndex(II)I
compileOnly java.util.HashSet.<init>(I)V
compileOnly java.lang.Math.max(II)I
compileOnly java.util.WeakHashMap$Entry.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;ILjava/util/WeakHashMap$Entry;)V
compileOnly jdk.internal.misc.VM.initializeOSEnvironment()V
compileOnly java.util.Collections$EmptySet.contains(Ljava/lang/Object;)Z
compileOnly jdk.internal.ref.CleanerFactory$1.newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;
compileOnly java.util.concurrent.atomic.AtomicInteger.getAndAdd(I)I
compileOnly java.lang.StringCoding.encode(Ljava/nio/charset/Charset;B[B)[B
compileOnly java.lang.String.<init>([BLjava/lang/String;)V
compileOnly java.util.concurrent.ConcurrentHashMap.mappingCount()J
compileOnly java.util.HashMap$TreeNode.putTreeVal(Ljava/util/HashMap;[Ljava/util/HashMap$Node;ILjava/lang/Object;Ljava/lang/Object;)Ljava/util/HashMap$TreeNode;
compileOnly java.lang.StringLatin1.getChars([BII[CI)V
compileOnly java.lang.AbstractStringBuilder.ensureCapacityInternal(I)V
compileOnly java.lang.Object.hashCode()I
compileOnly jdk.internal.module.Builder.packages(Ljava/util/Set;)Ljdk/internal/module/Builder;
compileOnly java.util.ImmutableCollections$Set0.<init>()V
compileOnly java.lang.ref.Finalizer$FinalizerThread.run()V
compileOnly java.util.concurrent.ConcurrentHashMap$Traverser.advance()Ljava/util/concurrent/ConcurrentHashMap$Node;
compileOnly java.io.BufferedOutputStream.<init>(Ljava/io/OutputStream;I)V
compileOnly sun.net.www.URLConnection.<clinit>()V
compileOnly java.util.Locale.getInstance(Lsun/util/locale/BaseLocale;Lsun/util/locale/LocaleExtensions;)Ljava/util/Locale;
compileOnly java.io.BufferedOutputStream.flushBuffer()V
compileOnly java.lang.module.ModuleDescriptor.name()Ljava/lang/String;
compileOnly java.lang.ClassLoader$NativeLibrary.<clinit>()V
compileOnly java.io.FilterInputStream.<init>(Ljava/io/InputStream;)V
compileOnly sun.nio.cs.StandardCharsets.aliases_US_ASCII()[Ljava/lang/String;
compileOnly jdk.internal.ref.CleanerFactory$1$1.<init>(Ljdk/internal/ref/CleanerFactory$1;Ljava/lang/Runnable;)V
compileOnly jdk.internal.misc.SharedSecrets.getJavaNetURLAccess()Ljdk/internal/misc/JavaNetURLAccess;
compileOnly java.lang.module.ModuleDescriptor$1.newExports(Ljava/util/Set;Ljava/lang/String;)Ljava/lang/module/ModuleDescriptor$Exports;
compileOnly java.util.Locale.getCompatibilityExtensions(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lsun/util/locale/LocaleExtensions;
compileOnly jdk.internal.loader.URLClassPath.toFileURL(Ljava/lang/String;)Ljava/net/URL;
compileOnly java.net.URL.getRef()Ljava/lang/String;
compileOnly java.lang.System.lineSeparator()Ljava/lang/String;
compileOnly jdk.internal.module.ModulePatcher.hasPatches()Z
compileOnly java.lang.StringLatin1.canEncode(I)Z
compileOnly jdk.internal.misc.SharedSecrets.setJavaNetUriAccess(Ljdk/internal/misc/JavaNetUriAccess;)V
compileOnly java.io.FileDescriptor.initIDs()V
compileOnly java.lang.ThreadLocal.nextHashCode()I
compileOnly java.io.FileDescriptor.close()V
compileOnly java.util.concurrent.ConcurrentHashMap.replaceNode(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.lang.String.getBytes(Ljava/nio/charset/Charset;)[B
compileOnly jdk.internal.loader.ClassLoaders$PlatformClassLoader.<clinit>()V
compileOnly java.util.Collections$1.<init>(Ljava/lang/Object;)V
compileOnly java.lang.Thread.getContextClassLoader()Ljava/lang/ClassLoader;
compileOnly java.lang.ThreadGroup.add(Ljava/lang/ThreadGroup;)V
compileOnly jdk.internal.module.SystemModules$default.moduleResolutions()[Ljdk/internal/module/ModuleResolution;
compileOnly java.lang.ClassLoader.getBuiltinPlatformClassLoader()Ljava/lang/ClassLoader;
compileOnly java.util.WeakHashMap.containsKey(Ljava/lang/Object;)Z
compileOnly java.util.Properties.<init>(I)V
compileOnly sun.security.action.GetPropertyAction.privilegedGetProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
compileOnly java.lang.System.getSecurityManager()Ljava/lang/SecurityManager;
compileOnly jdk.internal.loader.Resource.getBytes()[B
compileOnly java.io.FileDescriptor.<clinit>()V
compileOnly java.lang.String.join(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;
compileOnly java.lang.ModuleLayer.defineModules(Ljava/lang/module/Configuration;Ljava/util/function/Function;)Ljava/lang/ModuleLayer;
compileOnly jdk.internal.module.Builder.uses(Ljava/util/Set;)Ljdk/internal/module/Builder;
compileOnly java.net.URL.getPort()I
compileOnly java.security.Permission.getName()Ljava/lang/String;
compileOnly java.security.AccessController.doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
compileOnly jdk.internal.loader.ClassLoaders$BootClassLoader.<init>(Ljdk/internal/loader/URLClassPath;)V
compileOnly jdk.internal.loader.URLClassPath$FileLoader.<init>(Ljava/net/URL;)V
compileOnly java.util.Optional.orElse(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.util.Hashtable.get(Ljava/lang/Object;)Ljava/lang/Object;
compileOnly java.lang.System$2.defineUnnamedModule(Ljava/lang/ClassLoader;)Ljava/lang/Module;
compileOnly java.security.AccessController.getContext()Ljava/security/AccessControlContext;
compileOnly java.lang.ClassLoader.registerAsParallelCapable()Z
compileOnly java.util.AbstractList$Itr.next()Ljava/lang/Object;
compileOnly java.nio.charset.CodingErrorAction.<clinit>()V
compileOnly java.lang.ClassLoader.access$000()Ljava/util/Set;
compileOnly java.lang.System$2.<init>()V
compileOnly java.lang.StringLatin1.indexOf([BI[BII)I
compileOnly java.util.Set.of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
compileOnly java.io.UnixFileSystem.resolve(Ljava/io/File;)Ljava/lang/String;
compileOnly java.security.PermissionCollection.setReadOnly()V
compileOnly java.lang.ClassLoader.getPlatformClassLoader()Ljava/lang/ClassLoader;
compileOnly java.nio.Buffer.limit()I
compileOnly java.lang.reflect.Method.copy()Ljava/lang/reflect/Method;
compileOnly java.lang.StringCoding.hasNegatives([BII)Z
compileOnly java.lang.module.ModuleDescriptor$Modifier.<clinit>()V
compileOnly java.lang.Thread.exit()V
compileOnly java.nio.charset.CoderResult.isOverflow()Z
compileOnly java.lang.module.ModuleDescriptor.hashCode()I
compileOnly java.io.FilePermissionCollection.add(Ljava/security/Permission;)V
compileOnly java.lang.System$2.addOpensToAllUnnamed(Ljava/lang/Module;Ljava/util/Iterator;)V
compileOnly java.net.URI.isOpaque()Z
compileOnly jdk.internal.module.IllegalAccessLogger$Mode.<init>(Ljava/lang/String;I)V
compileOnly java.lang.ClassLoader$2.<init>(Ljava/io/File;)V
compileOnly jdk.internal.module.SystemModuleFinders.hashSupplier(Ljava/util/Map;Ljava/lang/String;)Ljdk/internal/module/ModuleHashes$HashSupplier;
compileOnly java.util.Properties.getProperty(Ljava/lang/String;)Ljava/lang/String;
compileOnly java.nio.Buffer.limit(I)Ljava/nio/Buffer;
compileOnly java.lang.Shutdown.sequence()V
compileOnly jdk.internal.module.ServicesCatalog.create()Ljdk/internal/module/ServicesCatalog;
compileOnly java.util.AbstractList$Itr.<init>(Ljava/util/AbstractList;Ljava/util/AbstractList$1;)V
compileOnly java.security.BasicPermissionCollection.<clinit>()V
compileOnly java.io.ExpiringCache$1.<init>(Ljava/io/ExpiringCache;)V
compileOnly java.lang.ModuleLayer.checkConfiguration(Ljava/lang/module/Configuration;Ljava/util/List;)V
compileOnly java.lang.AbstractStringBuilder.getCoder()B
compileOnly jdk.internal.misc.Unsafe.compareAndSetLong(Ljava/lang/Object;JJJ)Z
compileOnly jdk.internal.module.Builder.provides([Ljava/lang/module/ModuleDescriptor$Provides;)Ljdk/internal/module/Builder;
compileOnly java.lang.module.ModuleDescriptor$Requires$Modifier.<clinit>()V
compileOnly jdk.internal.ref.PhantomCleanable.remove()Z
compileOnly java.io.BufferedOutputStream.flush()V
compileOnly java.util.Locale.<clinit>()V
compileOnly java.lang.Object.notifyAll()V
compileOnly java.lang.ClassLoader.findBootstrapClass(Ljava/lang/String;)Ljava/lang/Class;
compileOnly java.lang.ref.Reference.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
compileOnly java.util.Collections$UnmodifiableCollection.iterator()Ljava/util/Iterator;
compileOnly java.util.Stack.peek()Ljava/lang/Object;
compileOnly java.lang.ThreadGroup.checkParentAccess(Ljava/lang/ThreadGroup;)Ljava/lang/Void;
compileOnly java.io.UnixFileSystem.canonicalize(Ljava/lang/String;)Ljava/lang/String;
compileOnly java.lang.Float.isNaN(F)Z
compileOnly java.lang.reflect.ReflectAccess.copyConstructor(Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;
compileOnly jdk.internal.misc.SharedSecrets.setJavaLangModuleAccess(Ljdk/internal/misc/JavaLangModuleAccess;)V
compileOnly java.lang.Thread.setPriority0(I)V
compileOnly sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar.<init>(Ljava/lang/String;Lsun/util/locale/InternalLocaleBuilder$1;)V
compileOnly jdk.internal.loader.URLClassPath$FileLoader$1.getCodeSourceURL()Ljava/net/URL;
compileOnly jdk.internal.ref.CleanerImpl.<init>()V
compileOnly sun.launcher.LauncherHelper.<clinit>()V
compileOnly java.util.Hashtable$Entry.<init>(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/Hashtable$Entry;)V
compileOnly jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(Ljava/lang/String;)Ljava/lang/Class;
compileOnly java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class;
compileOnly sun.util.locale.LocaleUtils.toLower(C)C
compileOnly jdk.internal.reflect.ReflectionFactory.<init>()V
compileOnly java.lang.ref.ReferenceQueue.remove(J)Ljava/lang/ref/Reference;
compileOnly java.lang.StringCoding$1.<init>()V
compileOnly java.util.concurrent.ConcurrentHashMap$EntrySetView.iterator()Ljava/util/Iterator;
compileOnly java.util.Locale$Cache.<init>(Ljava/util/Locale$1;)V
compileOnly java.util.AbstractMap$1$1.<init>(Ljava/util/AbstractMap$1;)V
compileOnly java.util.Collections$SetFromMap.add(Ljava/lang/Object;)Z
compileOnly jdk.internal.module.SystemModules$default.moduleReads()Ljava/util/Map;
compileOnly java.io.FileInputStream.access$000(Ljava/io/FileInputStream;)Ljava/io/FileDescriptor;
compileOnly java.nio.file.spi.FileSystemProvider.checkPermission()Ljava/lang/Void;
compileOnly java.security.AccessControlContext.<clinit>()V
compileOnly java.util.AbstractCollection.<init>()V
compileOnly java.lang.ThreadGroup.remove(Ljava/lang/Thread;)V
compileOnly java.lang.reflect.ReflectAccess.getExecutableSharedParameterTypes(Ljava/lang/reflect/Executable;)[Ljava/lang/Class;
compileOnly java.util.concurrent.ConcurrentHashMap$EntryIterator.next()Ljava/util/Map$Entry;
compileOnly java.util.ArrayDeque$DeqIterator.<init>(Ljava/util/ArrayDeque;)V
compileOnly java.lang.ClassLoader.access$200()Ljava/util/Map;
compileOnly java.lang.Character.toUpperCase(I)I
compileOnly java.util.Objects.requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
compileOnly sun.nio.cs.StreamEncoder.implWrite(Ljava/nio/CharBuffer;)V
compileOnly java.lang.ThreadLocal$ThreadLocalMap.<init>(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V
compileOnly java.lang.AbstractStringBuilder.newCapacity(I)I
compileOnly sun.nio.fs.UnixPath.normalize(Ljava/lang/String;II)Ljava/lang/String;
compileOnly java.lang.String.equalsIgnoreCase(Ljava/lang/String;)Z
compileOnly java.util.ImmutableCollections$ListN.size()I
compileOnly java.nio.ByteBuffer.hasArray()Z
compileOnly java.lang.reflect.Constructor.acquireConstructorAccessor()Ljdk/internal/reflect/ConstructorAccessor;
compileOnly jdk.internal.loader.AbstractClassLoaderValue.<clinit>()V
compileOnly java.lang.module.ModuleDescriptor$1.newConfiguration(Ljava/lang/module/ModuleFinder;Ljava/util/Map;)Ljava/lang/module/Configuration;
compileOnly jdk.internal.misc.InnocuousThread.access$000()Ljava/lang/ThreadGroup;
compileOnly java.util.Collections$SynchronizedSet.<init>(Ljava/util/Set;Ljava/lang/Object;)V
compileOnly sun.security.action.GetPropertyAction.privilegedGetProperties()Ljava/util/Properties;
compileOnly sun.nio.fs.UnixPath.isEmpty()Z
compileOnly java.lang.reflect.Method.getModifiers()I
compileOnly jdk.internal.reflect.Reflection.<clinit>()V
compileOnly sun.util.locale.BaseLocale$Cache.<init>()V
compileOnly sun.util.locale.BaseLocale.equals(Ljava/lang/Object;)Z
compileOnly jdk.internal.misc.SharedSecrets.setJavaIOFileDescriptorAccess(Ljdk/internal/misc/JavaIOFileDescriptorAccess;)V
compileOnly java.lang.module.Configuration.reads(Ljava/lang/module/ResolvedModule;)Ljava/util/Set;
compileOnly java.net.URL.<init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V
compileOnly java.net.URI.hashCode()I
compileOnly java.lang.String.endsWith(Ljava/lang/String;)Z
compileOnly java.net.URI.hash(ILjava/lang/String;)I
compileOnly java.util.Stack.pop()Ljava/lang/Object;
compileOnly java.util.HashMap$EntryIterator.next()Ljava/lang/Object;
compileOnly java.security.SecureClassLoader.<init>(Ljava/lang/String;Ljava/lang/ClassLoader;)V
